// ! –ú–æ–¥—É–ª—å 2: –§—É–Ω–∫—Ü–∏–∏ –∏ –º–∞—Å—Å–∏–≤—ã

// ! –õ–µ–∫—Ü–∏—è 2-1

/*
 * –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç –ø–æ–∏—Å–∫–∞ —Å–∞–º–æ–≥–æ –º–∞–ª–µ–Ω—å–∫–æ–≥–æ —á–∏—Å–ª–∞ –≤ –º–∞—Å—Å–∏–≤–µ. –ö–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å –¥–ª—è –ª—é–±–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —á–∏—Å–µ–ª. –ò—Å–ø–æ–ª—å–∑—É–π —Ü–∏–∫–ª –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–∏.
 */

// const numbers = [2, 17, 94, 1, 23, -37, 0, -5, -125];

// function getSmallestNumber() {
//   return Math.min(...numbers);
// }
// console.log("smallestNumber:", getSmallestNumber());

/*
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é findLogin(allLogins, login) –¥–ª—è –ø–æ–∏—Å–∫–∞ –ª–æ–≥–∏–Ω–∞
 * - –ï—Å–ª–∏ –ª–æ–≥–∏–Ω–∞ –Ω–µ—Ç, –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [–ª–æ–≥–∏–Ω] –Ω–µ –Ω–∞–π–¥–µ–Ω.'
 * - –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ª–æ–≥–∏–Ω, –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å [–ª–æ–≥–∏–Ω] –Ω–∞–π–¥–µ–Ω.'
 */

// const logins = ['m4ngoDoge', 'k1widab3st', 'poly1scute', 'aj4xth3m4n'];

// const findLogin = function (allLogins, loginToFind) {
//   for (const login of allLogins) {
//     if (login === loginToFind) {
//       return `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–∞–π–¥–µ–Ω.`;
//     }
//   }

//   return `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–µ –Ω–∞–π–¥–µ–Ω.`;
// };

// const findLogin = function (allLogins, loginToFind) {
//   return allLogins.includes(loginToFind)
//     ? `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–∞–π–¥–µ–Ω.`
//     : `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${loginToFind} –Ω–µ –Ω–∞–π–¥–µ–Ω.`;
// };

// console.log(findLogin(logins, 'avocod3r'));
// console.log(findLogin(logins, 'k1widab3st'));
// console.log(findLogin(logins, 'jam4l'));
// console.log(findLogin(logins, 'poly1scute'));

/*
 * –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é filterNumbers(array [, number1, ...]) –∫–æ—Ç–æ—Ä–∞—è:
 * - –ø–µ—Ä–≤—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª
 * - –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—Ä—É–≥–∏—Ö –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —á–∏—Å–ª–∞–º–∏.
 * - –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —Ç–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã, –Ω–∞—á–∏–Ω–∞—è —Å–æ –≤—Ç–æ—Ä–æ–≥–æ,
 *   –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –∞–Ω–∞–ª–æ–≥ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º –º–∞—Å—Å–∏–≤–µ.
 */

// const filterNumbers = function (array, ...args) {
//   console.log('array: ', array);
//   console.log('args: ', args);
//   const uniqueElements = [];

//   for (const element of array) {
//     if (args.includes(element)) {
//       uniqueElements.push(element);

//       console.log(`${element} –µ—Å—Ç—å –≤–µ–∑–¥–µ!`);
//     }
//   }

//   return uniqueElements;
// };

// console.log(filterNumbers([1, 2, 3, 4, 5], 10, 15, 2, 3, 8)); // [2, 3]
// console.log(filterNumbers([10, 15, 25, 30], 23, 30, 18, 15)); // [30, 15]
// console.log(filterNumbers([100, 200, 300, 400, 500], 7, 12, 200, 64)); // [200]

// ! –õ–µ–∫—Ü–∏—è 2-2

// * –ú—É—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ - –∏–∑–º–µ–Ω–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –≤ —è—á–µ–π–∫–µ –µ–≥–æ –ø–∞–º—è—Ç–∏

// function fun(array) {
//   for (let i = 0; i < array.length; i += 1) {
//     console.log(array[i]);
//     array[i] *= 2;
//   }
//   console.log(array);
// }

// const numbers = [1, 2, 3, 4, 5];
// fun(numbers);
// console.log(numbers);

// * 1 - –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é calcBMI(weight, height) –∫–æ—Ç–æ—Ä–∞—è —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ —á–µ–ª–æ–≤–µ–∫–∞. –î–ª—è —ç—Ç–æ–≥–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑–¥–µ–ª–∏—Ç—å –≤–µ—Å –≤ –∫–∏–ª–æ–≥—Ä–∞–º–º–∞—Ö –Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç –≤—ã—Å–æ—Ç—ã —á–µ–ª–æ–≤–µ–∫–∞ –≤ –º–µ—Ç—Ä–∞—Ö. * –í–µ—Å –∏ –≤—ã—Å–æ—Ç–∞ –±—É–¥—É—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –ø–µ—Ä–µ–¥–∞–Ω—ã –∫–∞–∫ —Å—Ç—Ä–æ–∫–∏. –ù–µ—Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –≤ –≤–∏–¥–µ 24.7 –∏–ª–∏ 24,7, —Ç–æ –µ—Å—Ç—å –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –¥—Ä–æ–±–Ω–æ–π —á–∞—Å—Ç–∏ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—è—Ç–∞—è. –ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–∫—Ä—É–≥–ª–∏—Ç—å –¥–æ –æ–¥–Ω–æ–π —Ü–∏—Ñ—Ä—ã –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π;

// function calcBMI(weight, height) {
//   const numericWeight = Number(weight.replace(",", "."));
//   const numericHeight = Number(height.replace(",", "."));

//   const index = numericWeight / Math.pow(numericHeight, 2);

//   return index.toFixed(1);
// }

// const bmi = calcBMI("88,3", "1,75");
// console.log("–ò–Ω–¥–µ–∫—Å –º–∞—Å—Å—ã —Ç–µ–ª–∞ =", bmi);

// * 2 - –ú–µ–Ω—å—à–µ–µ –∏–∑ —á–∏—Å–µ–ª. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é min(a,b), –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–µ–Ω—å—à–µ–µ –∏–∑ —á–∏—Å–µ–ª a –∏ b.

// function min(a, b) {
//   if (a > b) {
//     return b;
//   }
//   if (a < b) {
//     return a;
//   }
//   if (a === b) {
//     return "–ß–∏—Å–ª–æ –∞ —Ä–∞–≤–Ω–æ —á–∏—Å–ª—É b";
//   }
// }

// console.log(min(2, 5)); // 2
// console.log(min(3, -1)); // -1
// console.log(min(1, 1)); // 1

// * 3 - –ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é getRectArea(dimensions) –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –ø–ª–æ—â–∞–¥–∏ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ —Å–æ —Å—Ç–æ—Ä–æ–Ω–∞–º–∏, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä dimensions –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏. –ó–Ω–∞—á–µ–Ω–∏—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ —Ä–∞–∑–¥–µ–ª–µ–Ω—ã –ø—Ä–æ–±–µ–ª–æ–º.

// function getRectArea(dimensions) {
//   const rectSides = dimensions.split(" ");
//   const rectArea = Number(rectSides[0]) * Number(rectSides[1]);
//   return rectArea;
// }

// console.log(getRectArea("8 11"));

// * 4 - –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é logItems(items), –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Ü–∏–∫–ª for, –∫–æ—Ç–æ—Ä—ã–π –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ <–Ω–æ–º–µ—Ä —ç–ª–µ–º–µ–Ω—Ç–∞> - <–∑–Ω–∞—á–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞>. –ù—É–º–µ—Ä–∞—Ü–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 1. –ù–∞–ø—Ä–∏–º–µ—Ä –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ ['Mango', 'Poly', 'Ajax'] —Å –∏–Ω–¥–µ–∫—Å–æ–º 0 –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ 1 - Mango, –∞ –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ 2 –≤—ã–≤–µ–¥–µ—Ç 3 - Ajax.

// function logItems(items) {
//   let message;
//   for (let i = 0; i < items.length; i += 1) {
//     message = `${[i + 1]} - ${items[i]}`;
//     console.log(message);
//   }
// }

// logItems(["Mango", "Poly", "Ajax"]);
// logItems(["üçé", "üçá", "üçë", "üçå", "üçã"]);

// * 5 - –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é printContactsInfo(names, phones) –∫–æ—Ç–æ—Ä–∞—è –≤—ã–≤–æ–¥–∏—Ç –≤ –∫–æ–Ω—Å–æ–ª—å –∏–º—è –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í –ø–∞—Ä–∞–º–µ—Ç—Ä—ã names –∏ phones –±—É–¥—É—Ç –ø–µ—Ä–µ–¥–∞–Ω—ã —Å—Ç—Ä–æ–∫–∏ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã–µ –∑–∞–ø—è—Ç—ã–º–∏. –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≤ —Å—Ç—Ä–æ–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞—é—Ç –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–º–µ–Ω –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ

// function printContactsInfo(names, phones) {
//   const arrayNames = names.split(",");
//   const arrayPhones = phones.split(",");

//   let message;
//   for (let i = 0; i < arrayNames.length; i += 1) {
//     message = `${[i + 1]}: ${arrayNames[i]} - ${arrayPhones[i]}`;
//     console.log(message);
//   }
// }

// printContactsInfo(
//   "Jacob,William,Solomon,Artemis",
//   "89001234567,89001112233,890055566377,890055566300"
// );

// * 7 - –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é calAverage() –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏—Ö —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ. –í—Å–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞–º–∏.

// function calAverage() {
//   let sumOfNumbers = 0;
//   let average;

//   for (const argument of arguments) {
//     sumOfNumbers += argument;
//   }

//   average = sumOfNumbers / arguments.length;

//   return average;
// }

// console.log(calAverage(1, 2, 3, 4)); // 2.5
// console.log(calAverage(14, 8, 2)); // 8
// console.log(calAverage(27, 43, 2, 8, 36)); // 23.2

// * 8 - –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é formatTime(minutes) –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–µ–≤–µ–¥—ë—Ç –∑–Ω–∞—á–µ–Ω–∏–µ minutes (–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç) –≤ —Å—Ç—Ä–æ–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ —á–∞—Å–æ–≤ –∏ –º–∏–Ω—É—Ç HH:MM.

// function formatTime(minutes) {
//   const hours = Math.floor(minutes / 60);
//   minutes = minutes % 60;

//   const doubleDigitHours = String(hours).padStart(2, 0);
//   const doubleDigitMinutes = String(minutes).padStart(2, 0);

//   return `${doubleDigitHours}:${doubleDigitMinutes}`;
// }

// console.log(formatTime(70)); // "01:10"
// console.log(formatTime(450)); // "07:30"
// console.log(formatTime(1441)); // "24:01"

// * 9 - –ö–æ–ª–ª–µ–∫—Ü–∏—è –∫—É—Ä—Å–æ–≤ (includes, indexOf, push –∏ —Ç. –¥.). –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π –æ–±—É—á–∞—é—â–∏—Ö –∫—É—Ä—Å–æ–≤ courses: * addCourse(name) - –¥–æ–±–∞–≤–ª—è–µ—Ç –∫—É—Ä—Å –≤ –∫–æ–Ω–µ—Ü –∫–æ–ª–ª–µ–∫—Ü–∏–∏ * removeCourse(name) - —É–¥–∞–ª—è–µ—Ç –∫—É—Ä—Å –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ * updateCourse(oldName, newName) - –∏–∑–º–µ–Ω—è–µ—Ç –∏–º—è –Ω–∞ –Ω–æ–≤–æ–µ

const courses = ["HTML", "CSS", "JavaScript", "React", "PostgreSQL"];

// function addCourse(course) {
//   if (courses.includes(course)) {
//     return "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ç–∞–∫–æ–π –∫—É—Ä—Å";
//   }
//   const additionalCourse = courses.push(course);
//   return courses;
// }

// console.log(addCourse("Express"));
// console.log(addCourse("CSS"));

// function removeCourse(course) {
//   if (courses.includes(course)) {
//     const coursePosition = courses.indexOf(course);
//     courses.splice(coursePosition, 1);
//     return courses;
//   }
//   return "–ö—É—Ä—Å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω";
// }

// console.log(removeCourse("React"));
// console.log(removeCourse("Vue"));

// function updateCourse(oldCourse, newCourse) {
//   if (courses.includes(oldCourse)) {
//     const coursePosition = courses.indexOf(oldCourse);
//     courses.splice(coursePosition, 1, newCourse);
//     return courses;
//   }
//   return "–ö—É—Ä—Å —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω";
// }

// console.log(updateCourse("React", "NestJS"));

// ! –ê–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∏

// * 1. –ó–∞–ø–∏—à–∏ —É—Å–ª–æ–≤–∏–µ –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ if —Ç–∞–∫, —á—Ç–æ–±—ã —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–±–æ—Ç–∞–ª–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ.

// function checkAge(age) {
//   if (age >= 18) {
//     return "You are an adult";
//   }

//   return "You are a minor";
// }

// console.log(checkAge(19));

// * 2. –§—É–Ω–∫—Ü–∏—è checkPassword –ø–æ–ª—É—á–∞–µ—Ç –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä password, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ–≥–æ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ADMIN_PASSWORD –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ü—Ä–æ–≤–µ–¥–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ —Ñ—É–Ω–∫—Ü–∏–∏ checkPassword –∏—Å–ø–æ–ª—å–∑—É—è –ø–∞—Ç—Ç–µ—Ä–Ω ¬´—Ä–∞–Ω–Ω–∏–π –≤–æ–∑–≤—Ä–∞—Ç¬ª:
// * —É–¥–∞–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é message
// * —É–¥–∞–ª–∏ else
// * –∫–æ–¥ –¥–æ–ª–∂–µ–Ω —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–∞–∫ –∂–µ, –∫–∞–∫ –∏ –¥–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏

// function checkPassword(password) {
//   const ADMIN_PASSWORD = "jqueryismyjam";

//   if (password === ADMIN_PASSWORD) {
//     return "Welcome!";
//   }

//   return "Access denied, wrong password!";
// }

// console.log(checkPassword("jqueryismyjam"));

// * 3. –§—É–Ω–∫—Ü–∏—è checkStorage –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ. –û–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã—Ö –±—É–¥—É—Ç –∑–∞–¥–∞–≤–∞—Ç—å—Å—è –≤–æ –≤—Ä–µ–º—è –µ—ë –≤—ã–∑–æ–≤–∞.

// * available - –¥–æ—Å—Ç—É–ø–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ —Å–∫–ª–∞–¥–µ
// * ordered - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –µ–¥–∏–Ω–∏—Ü —Ç–æ–≤–∞—Ä–∞ –≤ –∑–∞–∫–∞–∑–µ
// * –ü—Ä–æ–≤–µ–¥–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ —Ñ—É–Ω–∫—Ü–∏–∏ checkStorage –∏—Å–ø–æ–ª—å–∑—É—è –ø–∞—Ç—Ç–µ—Ä–Ω ¬´—Ä–∞–Ω–Ω–∏–π –≤–æ–∑–≤—Ä–∞—Ç¬ª.

// function checkStorage(available, ordered) {
//   if (ordered === 0) {
//     console.log("Your order is empty!");
//     return;
//   }

//   if (ordered > available) {
//     console.log("Your order is too large, not enough goods in stock!");
//     return;
//   }
//   console.log("The order is accepted, our manager will contact you");
// }

// checkStorage(5, 1);

// * –í—Ç–æ—Ä–æ–π –≤–∞—Ä–∏–∞–Ω—Ç (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –¥–ª—è –∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∏)

// function checkStorage(available, ordered) {
//   if (ordered === 0) {
//     return "Your order is empty!";
//   }

//   if (ordered > available) {
//     return "Your order is too large, not enough goods in stock!";
//   }
//   return "The order is accepted, our manager will contact you";
// }

// console.log(checkStorage(5, 40));

// * 4. –û–±—ä—è–≤–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é fruits –∏ –ø—Ä–∏—Å–≤–æ–π –µ–π –º–∞—Å—Å–∏–≤ —Ñ—Ä—É–∫—Ç–æ–≤ - —Å—Ç—Ä–æ–∫ "apple", "plum", "pear" –∏ "orange".

// const fruits = ["apple", "plum", "pear", "orange"];
// console.log(fruits);

// * 5. –û–±—ä—è–≤–∏ —Ç—Ä–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –ø—Ä–∏—Å–≤–æ–π –∫–∞–∂–¥–æ–π –∏–∑ –Ω–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É—è –Ω–æ—Ç–∞—Ü–∏—é –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–æ–∫.

// const fruits = ["apple", "plum", "pear", "orange"];

// const firstElement = fruits[0];
// const secondElement = fruits[1];
// const lastElement = fruits[3];

// console.log(firstElement, secondElement, lastElement);

// * 6. –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏ 1 –∏ 3. –ó–∞–º–µ–Ω–∏ "plum" –Ω–∞ "peach", –∞ "orange" –Ω–∞ "banana".

// const fruits = ["apple", "plum", "pear", "orange"];

// fruits[1] = "peach";
// fruits[3] = "banana";

// console.log(fruits);

// * 7. –û–±—ä—è–≤–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é fruitsArrayLength –∏ –ø—Ä–∏—Å–≤–æ–π –µ–π –¥–ª–∏–Ω—É –º–∞—Å—Å–∏–≤–∞ fruits –∏—Å–ø–æ–ª—å–∑—É—è —Å–≤–æ–π—Å—Ç–≤–æ length.

// const fruits = ["apple", "peach", "pear", "banana", "orange"];
// const fruitsArrayLength = fruits.length;

// console.log(fruitsArrayLength);

// * 8. –û–±—ä—è–≤–∏ –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ: lastElementIndex - –ò–Ω–¥–µ–∫—Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Åc–∏–≤–∞ fruits —á–µ—Ä–µ–∑ –¥–ª–∏–Ω–∞_–º–∞—Å—Å–∏–≤–∞ - 1. lastElement - –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞

// const fruits = ["apple", "peach", "pear", "banana", "orange"];

// const lastElementIndex = fruits.length - 1;
// const lastElement = fruits[lastElementIndex];

// console.log(lastElementIndex);
// console.log(lastElement);

// * 9. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é getExtremeElements(array) –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä array - –º–∞—Å—Å–∏–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –º–∞—Å—Å–∏–≤ –∏–∑ –¥–≤—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ - –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ array.

// * –í–∞—Ä–∏–∞–Ω—Ç 1
// function getExtremeElements(...array) {
//   const firstAndLastElements = [array[0], array[array.length - 1]];
//   console.log(firstAndLastElements);
// }

// getExtremeElements("apple", "peach", "pear", "banana", "orange");
// getExtremeElements(1, 2, 3, 4, 5, 6, 7);

// * –í–∞—Ä–∏–∞–Ω—Ç 2
// function getExtremeElements(array) {
//   const firstAndLastElements = [array[0], array[array.length - 1]];
//   return firstAndLastElements;
// }

// console.log(getExtremeElements(["Earth", "Mars", "Venus"]));
// console.log(getExtremeElements(["apple", "peach", "pear", "banana"]));
// console.log(getExtremeElements([1, 2, 3, 4, 5]));

// * 10. –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ splitMessage(message, delimeter) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π words —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ message –ø–æ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—é delimeter - –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ–∫.

// function splitMessage(message, delimeter) {
//   let words;
//   words = message.split(delimeter);
//   return words;
// }

// console.log(splitMessage("Mango hurries to the train", " "));
// console.log(splitMessage("Mango", ""));
// console.log(splitMessage("best_for_week", "_"));

// * 11. –°–µ—Ä–≤–∏—Å—É –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–∏ —É–∫—Ä–∞—à–µ–Ω–∏–π –Ω—É–∂–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å—á–∏—Ç–∞–ª–∞ —Ü–µ–Ω—É –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–∏, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤ –∏ —Ü–µ–Ω—ã –∑–∞ —Å–ª–æ–≤–æ. –û–±—ä—è–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è calculateEngravingPrice(message, pricePerWord). –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É, —Å–æ—Å—Ç–æ—è—â—É—é –∏–∑ —Å–ª–æ–≤ —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª–∞–º–∏ (–ø–∞—Ä–∞–º–µ—Ç—Ä message) –∏ —Ü–µ–Ω—É –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–∏ –æ–¥–Ω–æ–≥–æ —Å–ª–æ–≤–∞ (–ø–∞—Ä–∞–º–µ—Ç—Ä pricePerWord). –ù–∞–ø–∏—à–∏ —Ç–µ–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –≥—Ä–∞–≤–∏—Ä–æ–≤–∫–∏ –≤—Å–µ—Ö —Å–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ.

// function calculateEngravingPrice(message, pricePerWord) {
//   let totalPrice = message.split(" ").length * pricePerWord;
//   return totalPrice;
// }

// console.log(calculateEngravingPrice("Web-development is creative work", 40));

// * 12. –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ makeStringFromArray(array, delimeter) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π string —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ array c —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º delimeter - —Å—Ç—Ä–æ–∫—É.

// function makeStringFromArray(array, delimeter) {
//   let string;
//   string = array.join(delimeter);
//   return string;
// }

// console.log(makeStringFromArray(["M", "a", "n", "g", "o"], ""));

// * 13. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é slugify(title) –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏, –ø–∞—Ä–∞–º–µ—Ç—Ä title, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç slug, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –∏–∑ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏. –ó–Ω–∞—á–µ–Ω–∏–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ title –±—É–¥—É—Ç —Å—Ç—Ä–æ–∫–∏, —Å–ª–æ–≤–∞ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–∑–¥–µ–ª–µ–Ω—ã —Ç–æ–ª—å–∫–æ –ø—Ä–æ–±–µ–ª–∞–º–∏. –í—Å–µ —Å–∏–º–≤–æ–ª—ã slug –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –Ω–∏–∂–Ω–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–µ. –í—Å–µ —Å–ª–æ–≤–∞ slug –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–∞–∑–¥–µ–ª–µ–Ω—ã —Ç–∏—Ä–µ

// function slugify(title) {
//   const slug = title.toLowerCase().split(" ").join("-");
//   return slug;
// }

// console.log(slugify("How to become a JUNIOR developer in TWO WEEKS"));

// * 14. –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞–ª–∏ —á–∞—Å—Ç–∏—á–Ω—ã–µ –∫–æ–ø–∏–∏ –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ fruits. firstTwoEls - –º–∞—Å—Å–∏–≤ –∏–∑ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, nonExtremeEls - –º–∞—Å—Å–∏–≤ –∏–∑ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ, lastThreeEls - –º–∞—Å—Å–∏–≤ –∏–∑ —Ç—Ä—ë—Ö –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤

// const fruits = ["apple", "plum", "pear", "orange", "banana"];

// const firstTwoEls = fruits.slice(0, 2);
// const nonExtremeEls = fruits.slice(1, 4);
// const lastThreeEls = fruits.slice(-3);

// console.log(firstTwoEls);
// console.log(nonExtremeEls);
// console.log(lastThreeEls);

// * 15. –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π allClients –ø–æ–ª—É—á–∏–ª—Å—è –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–æ–≤ oldClients –∏ newClients.

// const oldClients = ["Mango", "Ajax", "Poly", "Kiwi"];
// const newClients = ["Peach", "Houston"];

// const allClients = oldClients.concat(newClients);

// console.log(allClients);

// * 16. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é makeArray(firstArray, secondArray, maxLength) –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ —Å–æ –≤—Å–µ–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –¥–≤—É—Ö –∏—Å—Ö–æ–¥–Ω—ã—Ö firstArray –∏ secondArray. –ü–∞—Ä–∞–º–µ—Ç—Ä maxLength —Å–æ–¥–µ—Ä–∂–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–æ–ø—É—Å—Ç–∏–º—É—é –¥–ª–∏–Ω—É –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞. –ï—Å–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–æ–≤–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ –±–æ–ª—å—à–µ maxLength, —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –∫–æ–ø–∏—é –º–∞—Å—Å–∏–≤–∞ –¥–ª–∏–Ω–æ–π maxLength —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Ü–µ–ª–∏–∫–æ–º.

// function makeArray(firstArray, secondArray, maxLength) {
//   const newArray = firstArray.concat(secondArray);
//   if (newArray.length > maxLength) {
//     return newArray.slice(0, maxLength);
//   }

//   return newArray;
// }

// console.log(makeArray(["Earth", "Jupiter"], ["Neptune", "Uranus", "Venus"], 0));
// console.log(makeArray(["Earth", "Jupiter"], ["Neptune", "Uranus"], 4));
// console.log(makeArray(["Mango"], ["Ajax", "Chelsea", "Poly", "Houston"], 3));

// * 17. –î–æ–ø–æ–ª–Ω–∏ —Ü–∏–∫–ª for —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω –ª–æ–≥–∏—Ä–æ–≤–∞–ª –≤—Å–µ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç start –¥–æ end –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ.

// const start = 3;
// const end = 7;

// for (let i = start; i <= end; i += 1) {
//   console.log(i);
// }

// * 18. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é calculateTotal(number), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ (–ø–∞—Ä–∞–º–µ—Ç—Ä number) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É –≤—Å–µ—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –æ—Ç –µ–¥–∏–Ω–∏—Ü—ã –∏ –¥–æ —ç—Ç–æ–≥–æ —á–∏—Å–ª–∞. –ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ number —Ä–∞–≤–Ω–æ 3, —Ç–æ —Å—É–º–º–∞ —ç—Ç–æ 1 + 2 + 3, —Ç–æ –µ—Å—Ç—å 6.

// function calculateTotal(number) {
//   let sum = 0;
//   for (let i = 1; i <= number; i += 1) {
//     sum += i;
//   }
//   return sum;
// }

// console.log(calculateTotal(24));

// * 19. –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ü–∏–∫–ª–∞ for —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞–ª –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ fruits.

// const fruits = ["apple", "plum", "pear", "orange"];

// for (let i = 0; i < fruits.length; i += 1) {
//   const fruit = fruits[i];
//   console.log(fruit);
// }

// * 20. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é calculateTotalPrice(order), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä order - –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª, –∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ–±—â—É—é —Å—É–º–º—É –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –û–±—â–∞—è —Å—É–º–º–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –¥–æ–ª–∂–Ω–∞ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π total, –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è, –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏.

// function calculateTotalPrice(order) {
//   let total = 0;
//   for (let i = 0; i < order.length; i += 1) {
//     total += order[i];
//   }
//   return total;
// }

// console.log(calculateTotalPrice([412, 371, 94, 63, 176]));

// * 21. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é findLongestWord(string) –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω—É—é —Å—Ç—Ä–æ–∫—É —Å–æ—Å—Ç–æ—è—â—É—é —Ç–æ–ª—å–∫–æ –∏–∑ —Å–ª–æ–≤ —Ä–∞–∑–¥–µ–ª—ë–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–æ–º (–ø–∞—Ä–∞–º–µ—Ç—Ä string) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–∞–º–æ–µ –¥–ª–∏–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –≤ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–µ.

// function findLongestWord(string) {
//   const array = string.split(" ");
//   let word;
//   let wordlength = 0;
//   for (let i = 0; i < array.length; i += 1) {
//     if (array[i].length > wordlength) {
//       word = array[i];
//       wordlength = array[i].length;
//     }
//   }
//   return word;
// }

// console.log(
//   "The longest word:",
//   findLongestWord("The quick brown fox jumped over the lazy dog")
// );
// console.log("The longest word:", findLongestWord("Google do a roll"));

// * –ù–∞–π—Ç–∏ —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ –≤ –º–∞—Å—Å–∏–≤–µ

// const numbers = [51, 18, 13, 24, 7, 85, 19, 100];
// let biggestNumber = numbers[0];
// for (const number of numbers) {
//   if (number > biggestNumber) {
//     biggestNumber = number;
//   }
// }
// console.log("biggestNumber:", biggestNumber);

// * 22. –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ createArrayOfNumbers(min, max) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è min –¥–æ max.

// function createArrayOfNumbers(min, max) {
//   const numbers = [];
//   for (let i = min; i <= max; i += 1) {
//     numbers.push(i);
//   }
//   return numbers;
// }

// console.log(createArrayOfNumbers(14, 17));

// * 23. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é filterArray(numbers, value), –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª (–ø–∞—Ä–∞–º–µ—Ç—Ä numbers) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ numbers, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ —á–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ value (—á–∏—Å–ª–æ).

// function filterArray(numbers, value) {
//   const newArray = [];
//   for (let i = 0; i < numbers.length; i += 1) {
//     if (numbers[i] > value) {
//       newArray.push(numbers[i]);
//     }
//   }
//   return newArray;
// }

// console.log(filterArray([12, 24, 8, 41, 76], 38));
// console.log(filterArray([12, 24, 8, 41, 76], 20));

// * 24. –§—É–Ω–∫—Ü–∏—è checkFruit(fruit) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º —Ñ—Ä—É–∫—Ç–∞ (–ø–∞—Ä–∞–º–µ—Ç—Ä fruit), –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –µ—Å—Ç—å –ª–∏ —Ç–∞–∫–æ–π —Ñ—Ä—É–∫—Ç –≤ –º–∞—Å—Å–∏–≤–µ fruits. –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–∫, —á—Ç–æ –µ—Å–ª–∏: —Ñ—Ä—É–∫—Ç –µ—Å—Ç—å –≤ –º–∞—Å—Å–∏–≤–µ, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true; —Ñ—Ä—É–∫—Ç–∞ –Ω–µ—Ç –≤ –º–∞—Å—Å–∏–≤–µ, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false.

// function checkFruit(fruit) {
//   const fruits = ["apple", "plum", "pear", "orange"];

//   return fruits.includes(fruit);
// }

// console.log(checkFruit("plum"));

// * 25. –û–±—â–∏–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –º–∞—Å—Å–∏–≤–æ–≤ –Ω–∞–∑—ã–≤–∞—é—Ç —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤–æ –≤—Å–µ—Ö –º–∞—Å—Å–∏–≤–∞—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä, –≤ –¥–≤—É—Ö –º–∞—Å—Å–∏–≤–∞—Ö [1, 3, 5] –∏ [0, 8, 5, 3] –æ–±—â–∏–º–∏ –±—É–¥—É—Ç —á–∏—Å–ª–∞ 3 –∏ 5, —Ç.–∫. –æ–Ω–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –æ–±–æ–∏—Ö –∏—Å—Ö–æ–¥–Ω—ã—Ö –º–∞—Å—Å–∏–≤–∞—Ö. –ê —á–∏—Å–ª–∞ 0, 1 –∏ 8 –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–æ–ª—å–∫–æ –≤ –æ–¥–Ω–æ–º –∏–∑ –º–∞—Å—Å–∏–≤–æ–≤. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é getCommonElements(array1, array2) –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã array1 –∏ array2, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —Ç–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –≤ –æ–±–æ–∏—Ö –∏—Å—Ö–æ–¥–Ω—ã—Ö –º–∞—Å—Å–∏–≤–∞—Ö.

// function getCommonElements(array1, array2) {
//   const newArray = [];
//   for (let i = 0; i < array1.length; i += 1) {
//     if (array2.includes(array1[i])) {
//       newArray.push(array1[i]);
//     }
//   }
//   return newArray;
// }

// console.log(getCommonElements([1, 2, 3], [2, 1, 17, 19]));
// console.log(getCommonElements([24, 12, 27, 3], [12, 8, 3, 36, 27]));
// console.log(getCommonElements([1, 2, 3], [10, 20, 30]));

// * 26. –í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ —Ñ—É–Ω–∫—Ü–∏–∏ calculateTotalPrice(order) –∑–∞–º–µ–Ω–∏–≤ —Ü–∏–∫–ª for –Ω–∞ for...of.

// function calculateTotalPrice(order) {
//   let total = 0;

//   for (const item of order) {
//     total += item;
//   }

//   return total;
// }

// console.log(calculateTotalPrice([412, 371, 94, 63, 176]));

// * 27. –í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü–∏–∏ filterArray(numbers, value) –∑–∞–º–µ–Ω–∏–≤ —Ü–∏–∫–ª for –Ω–∞ for...of.

// function filterArray(numbers, value) {
//   const filteredNumbers = [];

//   for (const number of numbers) {
//     const num = number;

//     if (num > value) {
//       filteredNumbers.push(num);
//     }
//   }

//   return filteredNumbers;
// }

// console.log(filterArray([12, 24, 8, 41, 76], 38));

// * 28. –î–æ–ø–æ–ª–Ω–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –æ—Å—Ç–∞—Ç–∫–∞ –æ—Ç –¥–µ–ª–µ–Ω–∏—è —Ç–∞–∫, —á—Ç–æ–±—ã –∫–æ–¥ –ø—Ä–æ—Ö–æ–¥–∏–ª —Ç–µ—Å—Ç—ã. –û–±—ä—è–≤–ª–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è a –ó–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π a —ç—Ç–æ —á–∏—Å–ª–æ 0 –û–±—ä—è–≤–ª–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è b –ó–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π b —ç—Ç–æ —á–∏—Å–ª–æ 1 –û–±—ä—è–≤–ª–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è c –ó–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π c —ç—Ç–æ —á–∏—Å–ª–æ 3 –û–±—ä—è–≤–ª–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è d –ó–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π d —ç—Ç–æ —á–∏—Å–ª–æ 5 –û–±—ä—è–≤–ª–µ–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è e –ó–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π e —ç—Ç–æ —á–∏—Å–ª–æ 2

// const a = 3 % 3;
// const b = 4 % 3;
// const c = 11 % 4;
// const d = 12 % 7;
// const e = 8 % 6;

// console.log(a);
// console.log(b);
// console.log(c);
// console.log(d);
// console.log(e);

// * 29. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é getEvenNumbers(start, end) –∫–æ—Ç–æ—Ä–∞—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö —á—ë—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –æ—Ç start –¥–æ end. –ß—ë—Ç–Ω—ã–º —Å—á–∏—Ç–∞–µ—Ç—Å—è —á–∏—Å–ª–æ –∫–æ—Ç–æ—Ä–æ–µ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 2 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞ (10 % 2 === 0).

// function getEvenNumbers(start, end) {
//   const newArray = [];
//   for (let i = start; i <= end; i += 1) {
//     if (i % 2 === 0) {
//       newArray.push(i);
//     }
//   }
//   return newArray;
// }

// console.log(getEvenNumbers(3, 11));
// console.log(getEvenNumbers(8, 8));
// console.log(getEvenNumbers(6, 12));

// * 30. –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é number –∑–∞–ø–∏—Å—ã–≤–∞–ª–æ—Å—å –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –æ—Ç start –¥–æ end, –∫–æ—Ç–æ—Ä–æ–µ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ 5 –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞.

// const start = 6;
// const end = 27;
// let number;

// for (let i = start; i < end; i += 1) {
//   if (i % 5 === 0) {
//     number = i;
//     break;
//   }
// }

// console.log(number);

// * 31. –í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü–∏–∏ findNumber(start, end, divisor) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞: –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –æ—Ç start –¥–æ end, –∫–æ—Ç–æ—Ä–æ–µ –¥–µ–ª–∏—Ç—Å—è –Ω–∞ divisor –±–µ–∑ –æ—Å—Ç–∞—Ç–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä break –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é number

// function findNumber(start, end, divisor) {
//   let number;

//   for (let i = start; i < end; i += 1) {
//     if (i % divisor === 0) {
//       number = i;
//       return i;
//     }
//   }
// }

// console.log(findNumber(8, 17, 3));

// * 32. –ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é includes(array, value), –∫–æ—Ç–æ—Ä–∞—è –¥–µ–ª–∞–µ—Ç —Ç–æ–∂–µ —Å–∞–º–æ–µ, —á—Ç–æ –∏ –º–µ—Ç–æ–¥ –º–∞—Å—Å–∏–≤–∞ –º–∞—Å—Å–∏–≤.includes(–∑–Ω–∞—á–µ–Ω–∏–µ) - –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –≤ –º–∞—Å—Å–∏–≤–µ array –∑–Ω–∞—á–µ–Ω–∏–µ value, –≤–æ–∑–≤—Ä–∞—â–∞—è true –µ—Å–ª–∏ –µ—Å—Ç—å –∏ false –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ. –ü—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ –≤ —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏ includes() –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–µ—Ç–æ–¥ –º–∞—Å—Å–∏–≤.includes(–∑–Ω–∞—á–µ–Ω–∏–µ).

// function includes(array, value) {
//   for (let i = 0; i < array.length; i += 1) {
//     if (array[i] === value) {
//       return true;
//     }
//   }
//   return false;
// }

// console.log(includes([1, 2, 3, 4, 5], 3));
// console.log(
//   includes(["Earth", "Mars", "Venus", "Jupiter", "Saturn"], "Uranus")
// );
