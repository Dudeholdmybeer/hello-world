// ! –ú–æ–¥—É–ª—å 4: –ó–∞–Ω—è—Ç–∏–µ 7 - –ö–æ–ª–ª–±—ç–∫–∏ –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏

// * –ó–∞–¥–∞—á–∞ 1 :  * createProduct(obj, callback) - –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–±—ä–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞ –±–µ–∑ id, –∞ —Ç–∞–∫–∂–µ –∫–æ–ª–ª–±–µ–∫. –§—É–Ω–∫—Ü–∏—è —Å–æ–∑–¥–∞—ë—Ç –æ–±—ä–µ–∫—Ç —Ç–æ–≤–∞—Ä–∞, –¥–æ–±–∞–≤–ª—è—è –µ–º—É —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –≤ —Å–≤–æ–π—Å—Ç–≤–æ id –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –∫–æ–ª–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É —Å–æ–∑–¥–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç.   * logProduct(product) - –∫–æ–ª–ª–±–µ–∫ –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –æ–±—ä–µ–∫—Ç –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –ª–æ–≥–∏—Ä—É—é—â–∏–π –µ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å   * logTotalPrice(product) - –∫–æ–ª–ª–±–µ–∫ –ø—Ä–∏–Ω–∏–º–∞—é—â–∏–π –æ–±—ä–µ–∫—Ç –ø—Ä–æ–¥—É–∫—Ç–∞ –∏ –ª–æ–≥–∏—Ä—É—é—â–∏–π –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ–Ω—Å–æ–ª—å

// –ß—Ç–æ–±—ã –Ω–µ –º—É—Ç–∏—Ä–æ–≤–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π –æ–±—å–µ–∫—Ç obj - –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π (–Ω–∞–ø—Ä–∏–º–µ—Ä - product) —á–µ—Ä–µ–∑ –æ–ø–µ—Ä–∞—Ü–∏—é ...spread

// const createProduct = (obj, callback) => {
//   const product = {
//     id: Date.now(),
//     ...obj,
//   };
//   callback(product);
// };

// const logProduct = product => console.log(product);

// const logTotalPrice = ({ price, quantity, name }) => {
//   const totalPrice = price * quantity;
//   const message = `Total price of "${name}" = ${totalPrice}`;
//   console.log(message);
// };

// createProduct({ name: 'üçé', price: 30, quantity: 3 }, logProduct);

// createProduct({ name: 'üçã', price: 10, quantity: 15 }, logTotalPrice);

// * –ó–∞–¥–∞—á–∞ 2 :  * –î–æ–±–∞–≤—å—Ç–µ –æ–±—ä–µ–∫—Ç—É account –º–µ—Ç–æ–¥—ã withdraw(amount, onSuccess, onError) –∏ deposit(amount, onSuccess, onError), –≥–¥–µ –ø–µ—Ä–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä —ç—Ç–æ —Å—É–º–º–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏, –∞ –≤—Ç–æ—Ä–æ–π –∏ —Ç—Ä–µ—Ç–∏–π - –∫–æ–ª–±–µ–∫–∏. * –ú–µ—Ç–æ–¥ withdraw –≤—ã–∑—ã–≤–∞–µ—Ç onError –µ—Å–ª–∏ amount –±–æ–ª—å—à–µ TRANSACTION_LIMIT –∏–ª–∏ this.balance, –∏ onSuccess –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ. * –ú–µ—Ç–æ–¥ deposit –≤—ã–∑—ã–≤–∞–µ—Ç onError –µ—Å–ª–∏ amount –±–æ–ª—å—à–µ TRANSACTION_LIMIT –∏–ª–∏ –º–µ–Ω—å—à–µ –ª–∏–±–æ —Ä–∞–≤–µ–Ω –Ω—É–ª—é, –∏ onSuccess –≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ.

// const TRANSACTION_LIMIT = 1000;

// const account = {
//   balance: 500,

//   withdraw(amount, onSuccess, onError) {
//     if (amount > TRANSACTION_LIMIT) {
//       return onError(
//         `–°—É–º–º–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: ${amount}, –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç –æ–¥–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${TRANSACTION_LIMIT}. `
//       );
//     } else if (amount > this.balance) {
//       return onError(
//         `–°—É–º–º–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: ${amount}, –ø—Ä–µ–≤—ã—à–∞–µ—Ç —Å—É–º–º—É —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ: ${this.balance}. `
//       );
//     } else {
//       this.balance -= amount;
//       onSuccess(
//         `–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ, —Å—É–º–º–∞ —Å–Ω—è—Ç–∏—è: ${amount}, –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á–µ—Ç—É: ${this.balance}. `
//       );
//     }
//   },

//   deposit(amount, onSuccess, onError) {
//     if (amount > TRANSACTION_LIMIT) {
//       return onError(
//         `–°—É–º–º–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: ${amount}, –ø—Ä–µ–≤—ã—à–∞–µ—Ç –ª–∏–º–∏—Ç –æ–¥–Ω–æ–π —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏: ${TRANSACTION_LIMIT}. `
//       );
//     } else if (amount <= 0) {
//       return onError(
//         `–°—É–º–º–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏: ${amount}, –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ, –ª–∏–±–æ —Ä–∞–≤–Ω–æ –Ω—É–ª—é. `
//       );
//     } else this.balance += amount;
//     onSuccess(
//       `–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ, —Å—É–º–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è: ${amount}, –æ—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á–µ—Ç—É: ${this.balance}. `
//     );
//   },
// };

// const handleSuccess = message => console.log(`‚úÖ Success! ${message}`);

// const handleError = message => console.log(`‚ùå Error! ${message}`);

// account.withdraw(2000, handleSuccess, handleError);
// account.withdraw(600, handleSuccess, handleError);
// account.withdraw(300, handleSuccess, handleError);
// account.deposit(1700, handleSuccess, handleError);
// account.deposit(0, handleSuccess, handleError);
// account.deposit(-600, handleSuccess, handleError);
// account.deposit(600, handleSuccess, handleError);

// * –ó–∞–¥–∞—á–∞ 3 : * –ù–∞–ø–∏—à–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é each(array, callback), –∫–æ—Ç–æ—Ä–∞—è –ø–µ—Ä–≤—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º –æ–∂–∏–¥–∞–µ—Ç –º–∞—Å—Å–∏–≤, –∞ –≤—Ç–æ—Ä—ã–º - —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è –∫ –∫–∞–∂–¥–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞. –§—É–Ω–∫—Ü–∏—è each –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ –±—É–¥—É—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–∑–æ–≤–∞ –∫–æ–ª–±–µ–∫–∞.

// const each = (array, callback) => {
//   const newArray = [];

//   for (const element of array) {
//     newArray.push(callback(element));
//   }
//   return newArray;
// };

// console.log(each([64, 49, 36, 25, 16], value => value * 2));
// console.log(each([64, 49, 36, 25, 16], value => value - 10));
// console.log(each([64, 49, 36, 25, 16], value => Math.sqrt(value)));
// console.log(each([1.5, 2.1, 16.4, 9.7, 11.3], value => Math.ceil(value)));
// console.log(each([1.5, 2.1, 16.4, 9.7, 11.3], value => Math.floor(value)));

// * –ó–∞–¥–∞—á–∞ 4 :  * –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ forEach –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// const logItems = items => {
//   console.log(items);
//   items.forEach((item, index) => console.log(`${index + 1} - ${item}`));
// };

// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);

// * –ó–∞–¥–∞—á–∞ 5 :  * –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ forEach –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// const printContactsInfo = ({ names, phones }) => {
//   const arrayNames = names.split(',');
//   const arrayPhones = phones.split(',');

//   let message;
//   arrayNames.forEach((element, index) => {
//     message = `${index + 1}: ${element} - ${arrayPhones[index]}`;
//     console.log(message);
//   });
// };

// //
// printContactsInfo({
//   names: 'Jacob,William,Solomon,Artemis',
//   phones: '89001234567,89001112233,890055566377,890055566300',
// });

// * –ó–∞–¥–∞—á–∞ 6 :  * –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ forEach –∏ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// const calAverage = (...args) => {
//   let sumOfNumbers = 0;

//   args.forEach(element => {
//     sumOfNumbers += element;
//   });

//   const average = sumOfNumbers / args.length;

//   return average;
// };

// console.log(calAverage(1, 2, 3, 4)); // 2.5
// console.log(calAverage(14, 8, 2)); // 8
// console.log(calAverage(27, 43, 2, 8, 36)); // 23.2

// ! –ú–æ–¥—É–ª—å 4: –ó–∞–Ω—è—Ç–∏–µ 8 - –ü–µ—Ä–µ–±–µ—Ä–∞—é—â–∏–µ –º–µ—Ç–æ–¥—ã –º–∞—Å—Å–∏–≤–∞:

// * 1 - –ú–µ—Ç–æ–¥ map(): –ü–æ—ç–ª–µ–º–µ–Ω—Ç–Ω–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤. –ù–µ –∏–∑–º–µ–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤. –†–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã –∫–æ–ª–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Ç–∞–∫–æ–π –∂–µ –¥–ª–∏–Ω—ã.

// const planets = ["–ó–µ–º–ª—è", "–ú–∞—Ä—Å", "–í–µ–Ω–µ—Ä–∞", "–Æ–ø–∏—Ç–µ—Ä"];

// const planetsInUpperCase = planets.map(planet => planet.toUpperCase());
// console.log(planetsInUpperCase);

// * –ú—ã —É–∂–µ –∑–Ω–∞–µ–º —á—Ç–æ –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ —ç—Ç–æ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏—è –º–∞—Å—Å–∏–≤–æ–º –æ–±—ä–µ–∫—Ç–æ–≤. –ù–∞–ø—Ä–∏–º–µ—Ä, –ø–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ –∑–Ω–∞—á–µ–Ω–∏–π —Å–≤–æ–π—Å—Ç–≤–∞ –∏–∑ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤. –ï—Å—Ç—å –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –∞ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤ –∏—Ö –∏–º—ë–Ω.

// const students = [
//   { name: '–ú–∞–Ω–≥–æ', score: 83 },
//   { name: '–ü–æ–ª–∏', score: 59 },
//   { name: '–ê—è–∫—Å', score: 37 },
//   { name: '–ö–∏–≤–∏', score: 94 },
//   { name: '–•—å—é—Å—Ç–æ–Ω', score: 64 },
// ];

// const studentsNames = students.map(student => student.name);
// console.log(studentsNames);

// * 2 - –ú–µ—Ç–æ–¥ flatMap(): –∞–Ω–∞–ª–æ–≥–∏—á–µ–Ω –º–µ—Ç–æ–¥—É map(), –Ω–æ –ø—Ä–∏–º–µ–Ω—è–µ—Ç—Å—è –≤ —Å–ª—É—á–∞—è—Ö –∫–æ–≥–¥–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —ç—Ç–æ –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤ –∫–æ—Ç–æ—Ä—ã–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ ¬´—Ä–∞–∑–≥–ª–∞–¥–∏—Ç—å¬ª. –û—Ç–ª–∏—á–∏–µ –æ—Ç map() –≤ —Ç–æ–º, —á—Ç–æ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ ¬´—Ä–∞–∑–≥–ª–∞–∂–∏–≤–∞–µ—Ç—Å—è¬ª –Ω–∞ –≥–ª—É–±–∏–Ω—É —Ä–∞–≤–Ω—É—é –µ–¥–∏–Ω–∏—Ü–µ (–æ–¥–Ω–∞ –≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å).

// –í –º–∞—Å—Å–∏–≤–µ students —Ö—Ä–∞–Ω–∏—Ç—Å—è —Å–ø–∏—Å–æ–∫ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ —Å–æ —Å–ø–∏—Å–∫–æ–º –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å–µ—â–∞–µ—Ç —Å—Ç—É–¥–µ–Ω—Ç –≤ —Å–≤–æ–π—Å—Ç–≤–µ courses. –ù–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –º–æ–≥—É—Ç –ø–æ—Å–µ—â–∞—Ç—å –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –ø—Ä–µ–¥–º–µ—Ç. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ—Å—Ç–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Å–µ—â–∞–µ—Ç —ç—Ç–∞ –≥—Ä—É–ø–ø–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤, –ø–æ–∫–∞ –¥–∞–∂–µ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è.

// const students = [
//   { name: '–ú–∞–Ω–≥–æ', courses: ['–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '—Ñ–∏–∑–∏–∫–∞'] },
//   { name: '–ü–æ–ª–∏', courses: ['–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–∫–∞', '–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞'] },
//   { name: '–ö–∏–≤–∏', courses: ['—Ñ–∏–∑–∏–∫–∞', '–±–∏–æ–ª–æ–≥–∏—è'] },
// ];
// const studentsCoueses = students.flatMap(student => student.courses);

// console.log(studentsCoueses);

// * 3 - –ú–µ—Ç–æ–¥ filter(callback) –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏ - —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –º–∞—Å—Å–∏–≤–∞, —Ç–æ –µ—Å—Ç—å –∫–æ–≥–¥–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤—ã–±—Ä–∞—Ç—å –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –ø–æ –∫–∞–∫–æ–º—É-—Ç–æ –∫—Ä–∏—Ç–µ—Ä–∏—é. –ù–µ –∏–∑–º–µ–Ω—è–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤. –ü–æ—ç–ª–µ–º–µ–Ω—Ç–Ω–æ –ø–µ—Ä–µ–±–∏—Ä–∞–µ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–∞—Å—Å–∏–≤. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤. –î–æ–±–∞–≤–ª—è–µ—Ç –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π –º–∞—Å—Å–∏–≤ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç —É—Å–ª–æ–≤–∏—é –∫–æ–ª–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü–∏–∏. –ï—Å–ª–∏ –∫–æ–ª–ª–±–µ–∫ –≤–µ—Ä–Ω—É–ª true —ç–ª–µ–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π –º–∞—Å—Å–∏–≤. –ï—Å–ª–∏ –∫–æ–ª–ª–±–µ–∫ –≤–µ—Ä–Ω—É–ª false —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π –º–∞—Å—Å–∏–≤. –ï—Å–ª–∏ –Ω–∏ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –Ω–µ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏–ª —É—Å–ª–æ–≤–∏—é, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤

// const values = [51, -3, 27, 21, -68, 42, -37];

// const positiveValues = values.filter(value => value >= 0);
// console.log(positiveValues); // [51, 27, 21, 42]

// const negativeValues = values.filter(value => value < 0);
// console.log(negativeValues); // [-3, -68, -37]

// const bigValues = values.filter(value => value > 1000);
// console.log(bigValues); // []

// * –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ filter() –º–æ–∂–Ω–æ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é –º–∞—Å—Å–∏–≤–∞ —Ç–∞–∫, —á—Ç–æ –≤ –Ω—ë–º –æ—Å—Ç–∞–Ω—É—Ç—Å—è —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã. –≠—Ç–æ—Ç –ø—Ä–∏—ë–º —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å –º–∞—Å—Å–∏–≤–æ–º –ø—Ä–∏–º–∏—Ç–∏–≤–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π - –Ω–µ –æ–±—ä–µ–∫—Ç–æ–≤.

// const LOW_SCORE = 50;
// const HIGH_SCORE = 80;
// const students = [
//   { name: '–ú–∞–Ω–≥–æ', score: 83 },
//   { name: '–ü–æ–ª–∏', score: 59 },
//   { name: '–ê—è–∫—Å', score: 37 },
//   { name: '–ö–∏–≤–∏', score: 94 },
//   { name: '–•—å—é—Å—Ç–æ–Ω', score: 64 },
// ];

// const best = students.filter(student => student.score >= HIGH_SCORE);
// console.log(best); // –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –∏–º–µ–Ω–∞–º–∏ –ú–∞–Ω–≥–æ –∏ –ö–∏–≤–∏

// const worst = students.filter(student => student.score < LOW_SCORE);
// console.log(worst); // –ú–∞—Å—Å–∏–≤ —Å –æ–¥–Ω–∏–º –æ–±—ä–µ–∫—Ç–æ–º –ê—è–∫—Å

// // –í –∫–æ–ª–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü–∏–∏ —É–¥–æ–±–Ω–æ –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞
// const average = students.filter(
//   ({ score }) => score >= LOW_SCORE && score < HIGH_SCORE
// );
// console.log(average); // –ú–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –∏–º–µ–Ω–∞–º–∏ –ü–æ–ª–∏ –∏ –•—å—é—Å—Ç–æ–Ω

// * 4 - –ú–µ—Ç–æ–¥ find() - –ï—Å–ª–∏ –º–µ—Ç–æ–¥ filter(cabllack) –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—â–∏–º —É—Å–ª–æ–≤–∏—é, —Ç–æ –º–µ—Ç–æ–¥ find(callback) –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–π—Ç–∏ –∏ –≤–µ—Ä–Ω—É—Ç—å –ø–µ—Ä–≤—ã–π –ø–æ–¥—Ö–æ–¥—è—â–∏–π —ç–ª–µ–º–µ–Ω—Ç, –ø–æ—Å–ª–µ —á–µ–≥–æ –ø–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞ –ø—Ä–µ–∫—Ä–∞—â–∞–µ—Ç—Å—è. –¢–æ –µ—Å—Ç—å –æ–Ω –∏—â–µ—Ç –¥–æ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è. –ú–µ—Ç–æ–¥ find() –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–¥–Ω–æ–π –∑–∞–¥–∞—á–∏ - –ø–æ–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é —Å–≤–æ–π—Å—Ç–≤–∞.

// const colorPickerOptions = [
//   { label: 'red', color: '#F44336' },
//   { label: 'green', color: '#4CAF50' },
//   { label: 'blue', color: '#2196F3' },
//   { label: 'pink', color: '#E91E63' },
//   { label: 'indigo', color: '#3F51B5' },
// ];

// console.log(colorPickerOptions.find(option => option.label === 'blue')); // { label: 'blue', color: '#2196F3' }
// console.log(colorPickerOptions.find(option => option.label === 'white')); // undefined

// * 5 - –ú–µ—Ç–æ–¥ findIndex(callback) —ç—Ç–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–º–µ–Ω–∞ –º–µ—Ç–æ–¥—É indexOf(). –ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –ø–æ–∏—Å–∫ –ø–æ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã–º —É—Å–ª–æ–≤–∏—è–º —á–µ–º –ø—Ä–æ—Å—Ç–æ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ –º–∞—Å—Å–∏–≤–µ –ø—Ä–∏–º–∏—Ç–∏–≤–æ–≤, —Ç–∞–∫ –∏ –≤ –º–∞—Å—Å–∏–≤–µ –æ–±—å–µ–∫—Ç–æ–≤.

// const colorPickerOptions = [
//   { label: 'red', color: '#F44336' },
//   { label: 'green', color: '#4CAF50' },
//   { label: 'blue', color: '#2196F3' },
//   { label: 'pink', color: '#E91E63' },
//   { label: 'indigo', color: '#3F51B5' },
// ];

// console.log(colorPickerOptions.findIndex(option => option.label === 'blue'));
// console.log(colorPickerOptions.findIndex(option => option.label === 'white'));

// * 6.1 - –ú–µ—Ç–æ–¥ every() - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–æ—Ö–æ–¥—è—Ç –ª–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ —Ç–µ—Å—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã–π –∫–æ–ª–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü–∏–µ–π. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –∏–ª–∏ false.

// –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –±–æ–ª—å—à–µ –ª–∏–±–æ —Ä–∞–≤–Ω—ã –Ω—É–ª—é? - –¥–∞
// [1, 2, 3, 4, 5].every(value => value >= 0); // true

// –í—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –±–æ–ª—å—à–µ –ª–∏–±–æ —Ä–∞–≤–Ω—ã –Ω—É–ª—é? - –Ω–µ—Ç
// [1, 2, 3, -10, 4, 5].every(value => value >= 0); // false

// * 6.2 - –ú–µ—Ç–æ–¥ some() - –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç –ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ —Ç–µ—Å—Ç –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º—ã–π –∫–æ–ª–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü–∏–µ–π. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç true –∏–ª–∏ false.

// –ï—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –±–æ–ª—å—à–µ –ª–∏–±–æ —Ä–∞–≤–Ω—ã–π –Ω—É–ª—é? - –¥–∞
// [-7, -20, 3, -10, -14].some(value => value >= 0); // true

// –ï—Å—Ç—å —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –º–µ–Ω—å—à–µ –Ω—É–ª—è? - –Ω–µ—Ç
// [1, 2, 3, 4, 5].some(value => value < 0); // false

// * 7 - –ú–µ—Ç–æ–¥ reduce(callback, initialValue) –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, –∫–∞–∫ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä.

// const total = [2, 7, 3, 14, 6, 3].reduce((previousValue, number) => {
//   return previousValue + number;
// });

// console.log(total); // 32

// // –ú–∞—Å—Å–∏–≤ –æ–±—å–µ–∫—Ç–æ–≤

// const students = [
//   { name: '–ú–∞–Ω–≥–æ', score: 83 },
//   { name: '–ü–æ–ª–∏', score: 59 },
//   { name: '–ê—è–∫—Å', score: 37 },
//   { name: '–ö–∏–≤–∏', score: 94 },
//   { name: '–•—å—é—Å—Ç–æ–Ω', score: 64 },
// ];

// const totalScore = students.reduce((total, student) => {
//   return total + student.score;
// }, 0);

// const averageScore = totalScore / students.length;
// console.log(averageScore);

// // –ü—Ä–∏–º–µ—Ä –∏–∑ –∫–æ–Ω—Å–ø–µ–∫—Ç–∞:

// const tweets = [
//   { id: '000', likes: 5, tags: ['js', 'nodejs'] },
//   { id: '001', likes: 2, tags: ['html', 'css'] },
//   { id: '002', likes: 17, tags: ['html', 'js', 'nodejs'] },
//   { id: '003', likes: 8, tags: ['css', 'react'] },
//   { id: '004', likes: 0, tags: ['js', 'nodejs', 'react'] },
// ];

// const getTags = tweets =>
//   tweets.reduce((allTags, tweet) => {
//     allTags.push(...tweet.tags);

//     return allTags;
//   }, []);

// const tags = getTags(tweets);

// // –í—ã–Ω–µ—Å–µ–º callback-—Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–¥–µ–ª—å–Ω–æ, –∞ –≤ reduc–µ –ø–µ—Ä–µ–¥–∞–¥–∏–º —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ–µ.
// // –≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –µ—Å–ª–∏ callback-—Ñ—É–Ω–∫—Ü–∏—è –¥–æ–≤–æ–ª—å–Ω–æ –±–æ–ª—å—à–∞—è.

// // –ï—Å–ª–∏ –≤ –æ–±—ä–µ–∫—Ç–µ-–∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–µ acc –Ω–µ—Ç—É —Å–≤–æ–µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞ —Å –∫–ª—é—á–µ–º tag,
// // —Ç–æ —Å–æ–∑–¥–∞–µ–º –µ–≥–æ –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –µ–º—É –∑–Ω–∞—á–µ–Ω–∏–µ 0.
// // –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 1.
// const getTagStats = (acc, tag) => {
//   if (!acc.hasOwnProperty(tag)) {
//     acc[tag] = 0;
//   }

//   acc[tag] += 1;

//   return acc;
// };

// // –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ —ç—Ç–æ –ø—É—Å—Ç–æ–π –æ–±—ä–µ–∫—Ç {}
// const countTags = tags => tags.reduce(getTagStats, {});

// const tagCount = countTags(tags);
// console.log(tagCount);

// * 7 - –ú–µ—Ç–æ–¥ sort() —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞, –Ω–æ –≤ –æ—Ç–ª–∏—á–∏–∏ –æ—Ç –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–±–∏—Ä–∞—é—â–∏—Ö –º–µ—Ç–æ–¥–æ–≤, –æ–Ω —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤.

// const scores = [61, 19, 74, 3, 35, 92, 56];
// const ascendingScores = [...scores].sort((a, b) => a - b);
// console.log(ascendingScores); // [19, 35, 56, 61, 74, 92]

// const scores = [61, 19, 74, 35, 92, 56];
// const descendingScores = [...scores].sort((a, b) => b - a);
// console.log(descendingScores); // [92, 74, 61, 56, 35, 19]

// const students = ['–í–∏–∫–∞', '–ê–Ω–¥—Ä–µ–π', '–û–ª–µ–≥', '–Æ–ª—è', '–ë–æ—Ä–∏—Å', '–ö–∞—Ç—è'];

// const inAlphabetOrder = [...students].sort((a, b) => a.localeCompare(b));
// console.log(inAlphabetOrder); // ['–ê–Ω–¥—Ä–µ–π', '–ë–æ—Ä–∏—Å', '–í–∏–∫–∞', '–ö–∞—Ç—è', '–û–ª–µ–≥', '–Æ–ª—è']

// const inReversedOrder = [...students].sort((a, b) => b.localeCompare(a));
// console.log(inReversedOrder); // ['–Æ–ª—è', '–û–ª–µ–≥', '–ö–∞—Ç—è', '–í–∏–∫–∞', '–ë–æ—Ä–∏—Å', '–ê–Ω–¥—Ä–µ–π']

//  ! –†–µ–ø–µ—Ç–∞ 4-2:

// * –ú–µ—Ç–æ–¥ reduce - –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —Ç–µ–≥–∏ –∏–∑ —Ç–≤–∏—Ç–æ–≤

// const tweets = [
//   { id: '000', likes: 5, tags: ['js', 'nodejs'] },
//   { id: '001', likes: 2, tags: ['html', 'css'] },
//   { id: '002', likes: 17, tags: ['html', 'js', 'nodejs'] },
//   { id: '003', likes: 8, tags: ['css', 'react'] },
//   { id: '004', likes: 0, tags: ['js', 'nodejs', 'react'] },
// ];

// const allTags = tweets.reduce((alllTags, tweet) => {
//   alllTags.push(...tweet.tags);
//   return alllTags;
// }, []);

// –¢–æ–∂–µ —Å–∞–º–æ–µ, –Ω–æ —á—Ç–æ–±—ã –ª–∏–Ω—Ç–µ—Ä—ã –Ω–µ —Ä—É–≥–∞–ª–∏—Å—å, –∏ –∑–∞–ø–∏—Å—å –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É...

// const allTags = tweets.reduce(
//   (alllTags, tweet) => [...alllTags, ...tweet.tags],
//   []
// );

// console.log(allTags);

// * –¢–æ–∂–µ —Å–∞–º–æ–µ –Ω–æ —Å –º–µ—Ç–æ–¥–æ–º flatMap:

// const allTags = tweets.flatMap(tweet => tweet.tags);
// console.log(allTags);

// * –í–µ–¥—ë–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ–≥–æ–≤: –µ—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤–æ —Å –∫–ª—é—á–æ–º tag –µ—Å—Ç—å - —É–≤–µ–ª–∏—á–∏—Ç—å –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ 1, –µ—Å–ª–∏ —Å–≤–æ–π—Å—Ç–≤–æ—Å—Ç–≤–∞ –Ω–µ—Ç —Å —Ç–∞–∫–∏–º –∫–ª—é—á–æ–º —á—Ç–æ –≤ tag, —Å–¥–µ–ª–∞—Ç—å –∏ –∑–∞–ø–∏—Å–∞—Ç—å 1

// const tagsStats = allTags.reduce((acc, tag) => {
//   console.log(acc);

//   if (acc[tag]) {
//     acc[tag] += 1;

//     return acc;
//   }

//   acc[tag] = 1;

//   return acc;
// }, {});

// –¢–æ–∂–µ —Å–∞–º–æ–µ, –Ω–æ —á—Ç–æ–±—ã –ª–∏–Ω—Ç–µ—Ä—ã –Ω–µ —Ä—É–≥–∞–ª–∏—Å—å, –∏ –∑–∞–ø–∏—Å—å –≤ –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É...

// const tagsStats = allTags.reduce((acc, tag) => {
//   return {
//     ...acc,
//     [tag]: acc[tag] ? acc[tag] + 1 : 1,
//   };
// }, {});
// console.log(tagsStats);

// * –ú–µ—Ç–æ–¥ sort - –ø—Ä–∏–º–∏—Ç–∏–≤—ã:

// const numbers = [1, 19, 11, 6, 5, 65, 14, 2, 3];

// numbers.sort((a, b) => {
//   return b - a;
// });

// console.log('numbers', numbers);

// const letters = ['b', 'B', 'a', 'A'];
// letters.sort();
// console.log('letters', letters);

// * –ú–µ—Ç–æ–¥ sort - —Å–ª–æ–∂–Ω—ã–µ —Ç–∏–ø—ã:

// const players = [
//   { id: 'player-1', name: 'Mango', timePlayed: 310, online: false },
//   { id: 'player-2', name: 'Poly', timePlayed: 470, online: true },
//   { id: 'player-3', name: 'Aiwi', timePlayed: 230, online: true },
//   { id: 'player-4', name: 'Ajax', timePlayed: 150, online: false },
//   { id: 'player-5', name: 'Chelsey', timePlayed: 80, online: true },
// ];

// const bestPlayer = [...players].sort((firstPlayer, secondPlayer) => {
//   return firstPlayer.timePlayed - secondPlayer.timePlayed;
// });

// console.table(bestPlayer);

// * –ú–µ—Ç–æ–¥ charCodeAt() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Æ–Ω–∏–∫–æ–¥–∞ –¥–ª—è —Å–∏–º–≤–æ–ª–∞ –ø–æ —É–∫–∞–∑–∞–Ω–Ω–æ–º—É –∏–Ω–¥–µ–∫—Å—É:

// console.log('a'.charCodeAt(0));

// ! –õ–µ–∫—Ü–∏—è –î–µ–Ω–∏—Å 4-2:

// const cars = [
//   {
//     make: 'Honda',
//     model: 'CR-V',
//     type: 'suv',
//     amount: 14,
//     price: 24045,
//     onSale: true,
//   },
//   {
//     make: 'Honda',
//     model: 'Accord',
//     type: 'sedan',
//     amount: 2,
//     price: 22455,
//     onSale: true,
//   },
//   {
//     make: 'Mazda',
//     model: 'Mazda 6',
//     type: 'sedan',
//     amount: 8,
//     price: 24195,
//     onSale: false,
//   },
//   {
//     make: 'Mazda',
//     model: 'CX-9',
//     type: 'suv',
//     amount: 7,
//     price: 31520,
//     onSale: true,
//   },
//   {
//     make: 'Toyota',
//     model: '4Runner',
//     type: 'suv',
//     amount: 19,
//     price: 34210,
//     onSale: false,
//   },
//   {
//     make: 'Toyota',
//     model: 'Sequoia',
//     type: 'suv',
//     amount: 16,
//     price: 45560,
//     onSale: false,
//   },
//   {
//     make: 'Toyota',
//     model: 'Tacoma',
//     type: 'truck',
//     amount: 4,
//     price: 24320,
//     onSale: true,
//   },
//   {
//     make: 'Ford',
//     model: 'F-150',
//     type: 'truck',
//     amount: 11,
//     price: 27110,
//     onSale: true,
//   },
//   {
//     make: 'Ford',
//     model: 'Fusion',
//     type: 'sedan',
//     amount: 13,
//     price: 22120,
//     onSale: true,
//   },
//   {
//     make: 'Ford',
//     model: 'Explorer',
//     type: 'suv',
//     amount: 6,
//     price: 31660,
//     onSale: false,
//   },
// ];

// console.table(cars);

// * –ó–∞–¥–∞—á–∞ 1 - –ú–µ—Ç–æ–¥ map - –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è getModels –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –º–æ–¥–µ–ª–µ–π (–ø–æ–ª–µ model) –≤—Å–µ—Ö –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π.

// const getModels = cars => cars.map(car => car.model);

// –ù—É –º–æ–∂–Ω–æ –µ—â–µ –∏ —Ç–∞–∫ c –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏–µ–π:
// const getModels = cars => cars.map(({ model }) => model);

// console.log(getModels(cars));

// * –ó–∞–¥–∞—á–∞ 2 - –ú–µ—Ç–æ–¥ map - –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è makeCarsWithDiscount –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –æ–±—ä–µ–∫—Ç–æ–≤ —Å –∏–º–µ–Ω–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º —Å–≤–æ–π—Å—Ç–≤–∞ price –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Å–∫–∏–¥–∫–∏.

// const makeCarsWithDiscount = (cars, discount) =>
//   cars.map(car => ({
//     ...car,
//     price: car.price - car.price * discount,
//   }));

// console.table(cars);
// console.table(makeCarsWithDiscount(cars, 0.1));
// console.table(makeCarsWithDiscount(cars, 0.4));

// * –ó–∞–¥–∞—á–∞ 3 - –ú–µ—Ç–æ–¥ filter - –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è filterByPrice –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π, —Ü–µ–Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –º–µ–Ω—å—à–µ —á–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ threshold.

// const filterByPrice = (cars, threshold) =>
//   cars.filter(car => car.price < threshold);
// //   cars.filter(({ price }) => price < threshold);

// console.table(filterByPrice(cars, 30000));
// console.table(filterByPrice(cars, 25000));

// * –ó–∞–¥–∞—á–∞ 4 - –ú–µ—Ç–æ–¥ filter - –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è getCarsWithDiscount –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Å–≤–æ–π—Å—Ç–≤–æ onSale –∫–æ—Ç–æ—Ä—ã—Ö true.

// const getCarsWithDiscount = cars => cars.filter(car => car.onSale);

// console.table(getCarsWithDiscount(cars));

// * –ó–∞–¥–∞—á–∞ 5 - –ú–µ—Ç–æ–¥ filter - –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è getCarsWithType –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π —Ç–∏–ø –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ type.

// const getCarsWithType = (cars, type) => cars.filter(car => car.type === type);

// console.table(getCarsWithType(cars, 'suv'));
// console.table(getCarsWithType(cars, 'sedan'));

// * –ó–∞–¥–∞—á–∞ 6 - –ú–µ—Ç–æ–¥ find - –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è getCarByModel –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∞–≤—Ç–æ–º–æ–±–∏–ª—å, –ø–∞—Ä–∞–º–µ—Ç—Ä  –∫–æ—Ç–æ—Ä–æ–≥–æ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä—É –ø–æ–∏—Å–∫–∞.

// const getCarByModel = (cars, searchParam) =>
//   cars.find(({ model }) => model === searchParam);

// console.log(getCarByModel(cars, 'F-150'));
// console.log(getCarByModel(cars, 'CX-9'));

// * –ó–∞–¥–∞—á–∞ 7 - –ú–µ—Ç–æ–¥ sort - –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è sortByAscendingAmount –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∑–Ω–∞—á–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤–∞ amount.

// const sortByAscendingAmount = cars =>
//   [...cars].sort((firstCarModel, secondCarModel) => {
//     return firstCarModel.amount - secondCarModel.amount;
//   });

// console.table(sortByAscendingAmount(cars));

// * –ó–∞–¥–∞—á–∞ 8 - –ú–µ—Ç–æ–¥ sort - –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è sortByDescendingPrice –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ —É–±—ã–≤–∞–Ω–∏—é –∑–Ω–∞—á–µ–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤–∞ price.

// const sortByDescendingPrice = cars =>
//   [...cars].sort((a, b) => b.price - a.price);

// console.table(sortByDescendingPrice(cars));

// * –ó–∞–¥–∞—á–∞ 9 - –ú–µ—Ç–æ–¥ sort - –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è sortByModel –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –º–æ–¥–µ–ª–∏ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –∏ –æ–±—Ä–∞—Ç–Ω–æ–º –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∑–Ω–∞—á–µ–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ order.

// const sortByModel = (cars, order) => {
//   if (order === 'asc') {
//     return [...cars].sort((a, b) => a.model.localeCompare(b.model));
//   }
//   if (order === 'desc') {
//     return [...cars].sort((a, b) => b.model.localeCompare(a.model));
//   }
// };

// console.table(sortByModel(cars, 'asc'));
// console.table(sortByModel(cars, 'desc'));

// * –ó–∞–¥–∞—á–∞ 10 - –ú–µ—Ç–æ–¥ reduce - –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è getTotalAmount –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π(–∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤ amount).

// const getTotalAmount = cars => cars.reduce((acc, car) => acc + car.amount, 0);

// console.log(getTotalAmount(cars));

// * –ó–∞–¥–∞—á–∞ 11 - –¶–µ–ø–æ—á–∫–∏ –º–µ—Ç–æ–¥–æ–≤ - –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è getAvailableCarNames –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –º–æ–¥–µ–ª–µ–π –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π, –Ω–æ —Ç–æ–ª—å–∫–æ —Ç–µ—Ö, –∫–æ—Ç–æ—Ä—ã–µ —Å–µ–π—á–∞—Å –Ω–∞ —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–µ.

// const getAvailableCarNames = cars =>
//   cars.filter(car => car.onSale).map(car => car.model);

// console.table(getAvailableCarNames(cars));

// * –ó–∞–¥–∞—á–∞ 12 - –¶–µ–ø–æ—á–∫–∏ –º–µ—Ç–æ–¥–æ–≤ - –ü—É—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏—è getSortedCarsOnSale –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –º–æ–¥–µ–ª–µ–π –Ω–∞ —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–µ —Å–≤–æ–π—Å—Ç–≤–æ (onSale), –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –≤–æ–∑—Ä–æ—Å—Ç–∞–Ω–∏—é —Ü–µ–Ω—ã.

// const getSortedCarsOnSale = cars =>
//   cars.filter(car => car.onSale).sort((a, b) => a.price - b.price);

// console.table(getSortedCarsOnSale(cars));
// console.table(cars);

// ! 4 - –ê–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞:

// * 1 - –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π result –±—ã–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ makePizza, –∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π pointer –±—ã–ª–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ —Ñ—É–Ω–∫—Ü–∏—é makePizza.

// function makePizza() {
//   return 'Your pizza is being prepared, please wait.';
// }

// const result = makePizza();
// const pointer = makePizza;

// console.log(result);
// console.log(pointer);

// * 2 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é makeMessage —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –æ–∂–∏–¥–∞–ª–∞ –≤—Ç–æ—Ä—ã–º –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º (–ø–∞—Ä–∞–º–µ—Ç—Ä callback) –∫–æ–ª–±—ç–∫-—Ñ—É–Ω–∫—Ü–∏—é –∏ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –µ–µ –≤—ã–∑–æ–≤. –§—É–Ω–∫—Ü–∏—è deliverPizza –∏–ª–∏ makePizza –±—É–¥–µ—Ç –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –∫–∞–∫ –∫–æ–ª–±—ç–∫ –∏ –æ–∂–∏–¥–∞—Ç—å –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –∏–º—è –≥–æ—Ç–æ–≤–æ–π –¥–æ—Å—Ç–∞–≤–ª—è–µ–º–æ–π –ø–∏—Ü—Ü—ã.

// function deliverPizza(pizzaName) {
//   return `Delivering ${pizzaName} pizza.`;
// }

// function makePizza(pizzaName) {
//   return `Pizza ${pizzaName} is being prepared, please wait...`;
// }

// function makeMessage(pizzaName, callback) {
//   return callback(pizzaName);
// }

// console.log(makeMessage('Chicago', makePizza));
// console.log(makeMessage('Chicago', deliverPizza));

// * 3 - –î–æ–ø–æ–ª–Ω–∏ –≤—Ç–æ—Ä–æ–π –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ makePizza(pizzaName, callback), –ø–µ—Ä–µ–¥–∞–≤ –≤—Ç–æ—Ä—ã–º –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –∏–Ω–ª–∞–π–Ω –∫–æ–ª–±—ç–∫-—Ñ—É–Ω–∫—Ü–∏—é eatPizza(pizzaName), –∫–æ—Ç–æ—Ä–∞—è –ª–æ–≥–∏—Ä—É–µ—Ç —Å—Ç—Ä–æ–∫—É "Eating pizza <–∏–º—è –ø–∏—Ü—Ü—ã>".

// function makePizza(pizzaName, callback) {
//   console.log(`Pizza ${pizzaName} is being prepared, please wait...`);
//   callback(pizzaName);
// }

// makePizza('Royal Grand', function deliverPizza(pizzaName) {
//   console.log(`Delivering pizza ${pizzaName}.`);
// });

// makePizza('Ultracheese', function eatPizza(pizzaName) {
//   console.log(`Eating pizza ${pizzaName}`);
// });

// * 4 - –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å –ª–æ–≥–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–∫–∞–∑–∞ –ø–∏—Ü—Ü—ã. –í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –º–µ—Ç–æ–¥–∞ order —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω –ø—Ä–∏–Ω–∏–º–∞–ª –≤—Ç–æ—Ä—ã–º –∏ —Ç—Ä–µ—Ç–∏–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–≤–∞ –∫–æ–ª–±—ç–∫–∞ onSuccess –∏ onError. –ï—Å–ª–∏ –≤ —Å–≤–æ–π—Å—Ç–≤–µ pizzas –Ω–µ—Ç –ø–∏—Ü—Ü—ã —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ pizzaName, –º–µ—Ç–æ–¥ order –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–∑–æ–≤–∞ –∫–æ–ª–±—ç–∫–∞ onError, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º —Å—Ç—Ä–æ–∫—É "There is no pizza with a name <–∏–º—è –ø–∏—Ü—Ü—ã> in the assortment." –ï—Å–ª–∏ –≤ —Å–≤–æ–π—Å—Ç–≤–µ pizzas –µ—Å—Ç—å –ø–∏—Ü—Ü–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ pizzaName, –º–µ—Ç–æ–¥ order –¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–∑–æ–≤–∞ –∫–æ–ª–±—ç–∫–∞ onSuccess, –ø–µ—Ä–µ–¥–∞–≤–∞—è –µ–º—É –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –∏–º—è –∑–∞–∫–∞–∑–∞–Ω–Ω–æ–π –ø–∏—Ü—Ü—ã. –ü–æ—Å–ª–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–∞ pizzaPalace –º—ã –¥–æ–±–∞–≤–∏–ª–∏ –∫–æ–ª–±—ç–∫–∏ –∏ –≤—ã–∑–æ–≤—ã –º–µ—Ç–æ–¥–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –Ω–∏—á–µ–≥–æ —Ç–∞–º –Ω–µ –º–µ–Ω—è–π.

// const pizzaPalace = {
//   pizzas: ['Ultracheese', 'Smoked', 'Four meats'],

//   order(pizzaName, onSuccess, onError) {
//     if (!this.pizzas.includes(pizzaName)) {
//       return onError(
//         `There is no pizza with a name ${pizzaName} in the assortment.`
//       );
//     }
//     return onSuccess(pizzaName);
//   },
// };

// function makePizza(pizzaName) {
//   return `Your order is accepted. Cooking pizza ${pizzaName}.`;
// }

// function onOrderError(error) {
//   return `Error! ${error}`;
// }

// console.log(pizzaPalace.order('Smoked', makePizza, onOrderError));
// console.log(pizzaPalace.order('Vienna', makePizza, onOrderError));

// * 5 - –§—É–Ω–∫—Ü–∏—è calculateTotalPrice(orderedItems) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –æ–¥–∏–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä orderedItems - –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª, –∏ —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ–±—â—É—é —Å—É–º–º—É –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π totalPrice –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –∫–∞–∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞–±–æ—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏. –í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–∫, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–æ —Ü–∏–∫–ª–∞ for –æ–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞ –º–µ—Ç–æ–¥ forEach.

// function calculateTotalPrice(orderedItems) {
//   let totalPrice = 0;

//   orderedItems.forEach(element => (totalPrice += element));

//   return totalPrice;
// }

// console.log(calculateTotalPrice([412, 371, 94, 63, 176]));

// * 6 - –§—É–Ω–∫—Ü–∏—è filterArray(numbers, value) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª numbers –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ç–æ–ª—å–∫–æ —Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ —á–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ value. –í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–∫, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–æ —Ü–∏–∫–ª–∞ for –æ–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞ –º–µ—Ç–æ–¥ forEach.

// function filterArray(numbers, value) {
//   const filteredNumbers = [];

//   numbers.forEach(element => {
//     if (element > value) {
//       filteredNumbers.push(element);
//     }
//   });

//   return filteredNumbers;
// }

// console.log(filterArray([12, 24, 8, 41, 76], 38));

// * 7 - –§—É–Ω–∫—Ü–∏—è getCommonElements(firstArray, secondArray) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ–π –¥–ª–∏–Ω—ã –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã firstArray –∏ secondArray, –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏—Ö –æ–±—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Ç–æ –µ—Å—Ç—å —Ç–µ—Ö –∫–æ—Ç–æ—Ä—ã–µ –µ—Å—Ç—å –≤ –æ–±–æ–∏—Ö –º–∞—Å—Å–∏–≤–∞—Ö. –í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–∫, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–æ —Ü–∏–∫–ª–∞ for –æ–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞ –º–µ—Ç–æ–¥ forEach.

// function getCommonElements(firstArray, secondArray) {
//   const commonElements = [];

//   firstArray.forEach(element => {
//     if (secondArray.includes(element)) {
//       commonElements.push(element);
//     }
//   });

//   return commonElements;
// }

// console.log(getCommonElements([1, 2, 3], [2, 1, 17, 19]));
// console.log(getCommonElements([24, 12, 27, 3], [12, 8, 3, 36, 27]));

// * 8 - –í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü–∏–∏ calculateTotalPrice() —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –±—ã–ª–∞ –æ–±—ä—è–≤–ª–µ–Ω–∞ –∫–∞–∫ —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è.

// const calculateTotalPrice = (quantity, pricePerItem) => quantity * pricePerItem;

// console.log(calculateTotalPrice(8, 60));

// * 9 - –í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü–∏–∏ calculateTotalPrice() —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∞ –Ω–µ—è–≤–Ω—ã–π –≤–æ–∑–≤—Ä–∞—Ç.

// const calculateTotalPrice = (quantity, pricePerItem) => quantity * pricePerItem;

// console.log(calculateTotalPrice(3, 400));

// * 10 - –í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü–∏–∏ calculateTotalPrice(orderedItems) –∑–∞–º–µ–Ω–∏–≤ –µ—ë –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∞ —Å—Ç—Ä–µ–ª–æ—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é. –ó–∞–º–µ–Ω–∏ –∫–æ–ª–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü–∏—é –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—É—é –≤ –º–µ—Ç–æ–¥ forEach() –Ω–∞ —Å—Ç—Ä–µ–ª–æ—á–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é.

// const calculateTotalPrice = orderedItems => {
//   let totalPrice = 0;

//   orderedItems.forEach(item => (totalPrice += item));

//   return totalPrice;
// };

// console.log(calculateTotalPrice([12, 87, 37, 4]));

// * 11 - –ó–∞–º–µ–Ω–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ filterArray() –∏ –∫–æ–ª–ª–±–µ–∫ –¥–ª—è –º–µ—Ç–æ–¥–∞ forEach() –Ω–∞ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// const filterArray = (numbers, value) => {
//   const filteredNumbers = [];

//   numbers.forEach(number => {
//     if (number > value) {
//       filteredNumbers.push(number);
//     }
//   });

//   return filteredNumbers;
// };

// console.log(filterArray([12, 24, 8, 41, 76], 20));

// * 12 - –ó–∞–º–µ–Ω–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ getCommonElements() –∏ –∫–æ–ª–ª–±–µ–∫ –¥–ª—è –º–µ—Ç–æ–¥–∞ forEach() –Ω–∞ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.

// const getCommonElements = (firstArray, secondArray) => {
//   const commonElements = [];

//   firstArray.forEach(element => {
//     if (secondArray.includes(element)) {
//       commonElements.push(element);
//     }
//   });

//   return commonElements;
// };

// console.log(getCommonElements([10, 20, 30, 40], [4, 30, 17, 10, 40]));

// * 13 - –§—É–Ω–∫—Ü–∏—è changeEven(numbers, value) –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª numbers –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç, –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —ç—Ç–æ —á—ë—Ç–Ω–æ–µ —á–∏—Å–ª–æ, –¥–æ–±–∞–≤–ª—è—è –∫ –Ω–µ–º—É –∑–Ω–∞—á–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ value. –í—ã–ø–æ–ª–Ω–∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ —Ñ—É–Ω–∫—Ü–∏–∏ —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ —Å—Ç–∞–ª–∞ —á–∏—Å—Ç–æ–π - –Ω–µ –∏–∑–º–µ–Ω—è–ª–∞ –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª numbers, –∞ —Å–æ–∑–¥–∞–≤–∞–ª–∞, –Ω–∞–ø–æ–ª–Ω—è–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å –æ–±–Ω–æ–≤–ª—ë–Ω–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.

// function changeEven(numbers, value) {
//   const newNumbersArray = [];
//   numbers.forEach(element => {
//     if (element % 2 === 0) {
//       return newNumbersArray.push(element + value);
//     }
//     return newNumbersArray.push(element);
//   });

//   return newNumbersArray;
// }

// console.log(changeEven([2, 8, 3, 7, 4, 6], 10));

// * 14 - –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π planetsLengths –ø–æ–ª—É—á–∏–ª—Å—è –º–∞—Å—Å–∏–≤ –¥–ª–∏–Ω –Ω–∞–∑–≤–∞–Ω–∏–π –ø–ª–∞–Ω–µ—Ç. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π –º–µ—Ç–æ–¥ map().

// const planets = ['Earth', 'Mars', 'Venus', 'Jupiter'];

// const planetsLengths = planets.map(element => element.length);

// console.log(planetsLengths);

// * 15 - –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ map() —Å–¥–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π titles –ø–æ–ª—É—á–∏–ª—Å—è –º–∞—Å—Å–∏–≤ –Ω–∞–∑–≤–∞–Ω–∏–π –∫–Ω–∏–≥ (—Å–≤–æ–π—Å—Ç–≤–æ title) –∏–∑ –≤—Å–µ—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ books.

// const books = [
//   {
//     title: 'The Last Kingdom',
//     author: 'Bernard Cornwell',
//     rating: 8.38,
//   },
//   {
//     title: 'Beside Still Waters',
//     author: 'Robert Sheckley',
//     rating: 8.51,
//   },
//   {
//     title: 'The Dream of a Ridiculous Man',
//     author: 'Fyodor Dostoevsky',
//     rating: 7.75,
//   },
//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },
//   { title: 'Enemy of God', author: 'Bernard Cornwell', rating: 8.67 },
// ];

// const titles = books.map(book => book.title);

// console.log(titles);

// * 16 - –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ flatMap() —Å–¥–µ–ª–∞–π —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π genres –ø–æ–ª—É—á–∏–ª—Å—è –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –∂–∞–Ω—Ä–æ–≤ –∫–Ω–∏–≥ (—Å–≤–æ–π—Å—Ç–≤–æ genres) –∏–∑ –º–∞—Å—Å–∏–≤–∞ –∫–Ω–∏–≥ books.

// const books = [
//   {
//     title: 'The Last Kingdom',
//     author: 'Bernard Cornwell',
//     genres: ['adventure', 'history'],
//   },
//   {
//     title: 'Beside Still Waters',
//     author: 'Robert Sheckley',
//     genres: ['fiction'],
//   },
//   {
//     title: 'Redder Than Blood',
//     author: 'Tanith Lee',
//     genres: ['horror', 'mysticism'],
//   },
// ];

// const genres = books.flatMap(book => book.genres);

// console.log(genres);

// * 17 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é getUserNames(users) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ –∏–º—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å–≤–æ–π—Å—Ç–≤–æ name) –∏–∑ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ users.

// const users = [
//   {
//     name: 'Moore Hensley',
//     email: 'moorehensley@indexia.com',
//     eyeColor: 'blue',
//     friends: ['Sharron Pace'],
//     isActive: false,
//     balance: 2811,
//     skills: ['ipsum', 'lorem'],
//     gender: 'male',
//     age: 37,
//   },
//   {
//     name: 'Sharlene Bush',
//     email: 'sharlenebush@tubesys.com',
//     eyeColor: 'blue',
//     friends: ['Briana Decker', 'Sharron Pace'],
//     isActive: true,
//     balance: 3821,
//     skills: ['tempor', 'mollit', 'commodo', 'veniam', 'laborum'],
//     gender: 'female',
//     age: 34,
//   },
//   {
//     name: 'Ross Vazquez',
//     email: 'rossvazquez@xinware.com',
//     eyeColor: 'green',
//     friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//     isActive: false,
//     balance: 3793,
//     skills: ['nulla', 'anim', 'proident', 'ipsum', 'elit'],
//     gender: 'male',
//     age: 24,
//   },
//   {
//     name: 'Elma Head',
//     email: 'elmahead@omatom.com',
//     eyeColor: 'green',
//     friends: ['Goldie Gentry', 'Aisha Tran'],
//     isActive: true,
//     balance: 2278,
//     skills: ['adipisicing', 'irure', 'velit'],
//     gender: 'female',
//     age: 21,
//   },
//   {
//     name: 'Carey Barr',
//     email: 'careybarr@nurali.com',
//     eyeColor: 'blue',
//     friends: ['Jordan Sampson', 'Eddie Strong'],
//     isActive: true,
//     balance: 3951,
//     skills: ['ex', 'culpa', 'nostrud'],
//     gender: 'male',
//     age: 27,
//   },
//   {
//     name: 'Blackburn Dotson',
//     email: 'blackburndotson@furnigeer.com',
//     eyeColor: 'brown',
//     friends: ['Jacklyn Lucas', 'Linda Chapman'],
//     isActive: false,
//     balance: 1498,
//     skills: ['non', 'amet', 'ipsum'],
//     gender: 'male',
//     age: 38,
//   },
//   {
//     name: 'Sheree Anthony',
//     email: 'shereeanthony@kog.com',
//     eyeColor: 'brown',
//     friends: ['Goldie Gentry', 'Briana Decker'],
//     isActive: true,
//     balance: 2764,
//     skills: ['lorem', 'veniam', 'culpa'],
//     gender: 'female',
//     age: 39,
//   },
// ];

// console.table(users);

// const getUserNames = users => users.map(user => user.name);
// console.log(getUserNames(users));

// * 18 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é getUserEmails(users) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ –ø–æ—á—Ç–æ–≤—ã—Ö –∞–¥—Ä–µ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å–≤–æ–π—Å—Ç–≤–æ email) –∏–∑ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ users.

// const getUserEmails = users => users.map(user => user.email);
// console.log(getUserEmails(users));

// * 19 - –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π evenNumbers –ø–æ–ª—É—á–∏–ª—Å—è –º–∞—Å—Å–∏–≤ —á—ë—Ç–Ω—ã—Ö —á–∏—Å–µ–ª –∏–∑ –º–∞—Å—Å–∏–≤–∞ numbers, –∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π oddNumbers –º–∞—Å—Å–∏–≤ –Ω–µ—á—ë—Ç–Ω—ã—Ö. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π –º–µ—Ç–æ–¥ filter().

// const numbers = [17, 24, 82, 61, 36, 18, 47, 52, 73];

// const evenNumbers = numbers.filter(number => {
//   if (number % 2 === 0) {
//     return number;
//   }
// });

// const oddNumbers = numbers.filter(number => {
//   if (number % 2 !== 0) {
//     return number;
//   }
// });

// console.log(evenNumbers);
// console.log(oddNumbers);

// * 20 - –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π allGenres –±—ã–ª –º–∞—Å—Å–∏–≤ –≤—Å–µ—Ö –∂–∞–Ω—Ä–æ–≤ –∫–Ω–∏–≥ (—Å–≤–æ–π—Å—Ç–≤–æ genres) –∏–∑ –º–∞—Å—Å–∏–≤–∞ books, –∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π uniqueGenres –º–∞—Å—Å–∏–≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∂–∞–Ω—Ä–æ–≤ - –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π.

// const books = [
//   {
//     title: 'The Last Kingdom',
//     author: 'Bernard Cornwell',
//     genres: ['adventure', 'history'],
//   },
//   {
//     title: 'Beside Still Waters',
//     author: 'Robert Sheckley',
//     genres: ['fiction', 'mysticism'],
//   },
//   {
//     title: 'Redder Than Blood',
//     author: 'Tanith Lee',
//     genres: ['horror', 'mysticism', 'adventure'],
//   },
// ];

// const allGenres = books.flatMap(book => book.genres);
// const uniqueGenres = allGenres.filter(
//   (item, index, array) => array.indexOf(item) === index
// );

// console.log(allGenres);
// console.log(uniqueGenres);

// * 21 - –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ filter() –¥–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã: –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π topRatedBooks –ø–æ–ª—É—á–∏–ª—Å—è –º–∞—Å—Å–∏–≤ –∫–Ω–∏–≥ —Ä–µ–π—Ç–∏–Ω–≥ –∫–æ—Ç–æ—Ä—ã—Ö (—Å–≤–æ–π—Å—Ç–≤–æ rating) –±–æ–ª—å—à–µ –ª–∏–±–æ —Ä–∞–≤–Ω–æ –∑–Ω–∞—á–µ–Ω–∏—é –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π MIN_RATING. –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π booksByAuthor –ø–æ–ª—É—á–∏–ª—Å—è –º–∞—Å—Å–∏–≤ –∫–Ω–∏–≥ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã—Ö –∞–≤—Ç–æ—Ä–æ–º —Å –∏–º–µ–Ω–µ–º (—Å–≤–æ–π—Å—Ç–≤–æ author) –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π AUTHOR.

// const books = [
//   {
//     title: 'The Last Kingdom',
//     author: 'Bernard Cornwell',
//     rating: 8.38,
//   },
//   {
//     title: 'Beside Still Waters',
//     author: 'Robert Sheckley',
//     rating: 8.51,
//   },
//   {
//     title: 'The Dream of a Ridiculous Man',
//     author: 'Fyodor Dostoevsky',
//     rating: 7.75,
//   },
//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },
//   { title: 'Enemy of God', author: 'Bernard Cornwell', rating: 8.67 },
// ];

// const MIN_RATING = 8;
// const AUTHOR = 'Bernard Cornwell';

// const topRatedBooks = books.filter(book => book.rating >= MIN_RATING);
// console.table(topRatedBooks);
// const booksByAuthor = books.filter(book => book.author === AUTHOR);
// console.table(booksByAuthor);

// * 22 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é getUsersWithEyeColor(users, color) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É –∫–æ—Ç–æ—Ä—ã—Ö —Ü–≤–µ—Ç –≥–ª–∞–∑ (—Å–≤–æ–π—Å—Ç–≤–æ eyeColor) —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ color.

// const users = [
//   {
//     name: 'Moore Hensley',
//     email: 'moorehensley@indexia.com',
//     eyeColor: 'blue',
//     friends: ['Sharron Pace'],
//     isActive: false,
//     balance: 2811,
//     gender: 'male',
//   },
//   {
//     name: 'Sharlene Bush',
//     email: 'sharlenebush@tubesys.com',
//     eyeColor: 'blue',
//     friends: ['Briana Decker', 'Sharron Pace'],
//     isActive: true,
//     balance: 3821,
//     gender: 'female',
//   },
//   {
//     name: 'Ross Vazquez',
//     email: 'rossvazquez@xinware.com',
//     eyeColor: 'green',
//     friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
//     isActive: false,
//     balance: 3793,
//     gender: 'male',
//   },
//   {
//     name: 'Elma Head',
//     email: 'elmahead@omatom.com',
//     eyeColor: 'green',
//     friends: ['Goldie Gentry', 'Aisha Tran'],
//     isActive: true,
//     balance: 2278,
//     gender: 'female',
//   },
//   {
//     name: 'Carey Barr',
//     email: 'careybarr@nurali.com',
//     eyeColor: 'blue',
//     friends: ['Jordan Sampson', 'Eddie Strong'],
//     isActive: true,
//     balance: 3951,
//     gender: 'male',
//   },
//   {
//     name: 'Blackburn Dotson',
//     email: 'blackburndotson@furnigeer.com',
//     eyeColor: 'brown',
//     friends: ['Jacklyn Lucas', 'Linda Chapman'],
//     isActive: false,
//     balance: 1498,
//     gender: 'male',
//   },
//   {
//     name: 'Sheree Anthony',
//     email: 'shereeanthony@kog.com',
//     eyeColor: 'brown',
//     friends: ['Goldie Gentry', 'Briana Decker'],
//     isActive: true,
//     balance: 2764,
//     gender: 'female',
//   },
// ];

// const getUsersWithEyeColor = (users, color) =>
//   users.filter(user => user.eyeColor === color);

// console.log(getUsersWithEyeColor(users, 'brown'));

// * 23 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é getUsersWithAge(users, minAge, maxAge) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –≤–æ–∑—Ä–∞—Å—Ç –∫–æ—Ç–æ—Ä—ã—Ö (—Å–≤–æ–π—Å—Ç–≤–æ age) –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –ø—Ä–æ–º–µ–∂—É—Ç–æ–∫ –æ—Ç minAge –¥–æ maxAge.

const users = [
  {
    name: 'Moore Hensley',
    email: 'moorehensley@indexia.com',
    eyeColor: 'blue',
    friends: ['Sharron Pace'],
    isActive: false,
    balance: 2811,
    gender: 'male',
    age: 37,
  },
  {
    name: 'Sharlene Bush',
    email: 'sharlenebush@tubesys.com',
    eyeColor: 'blue',
    friends: ['Briana Decker', 'Sharron Pace'],
    isActive: true,
    balance: 3821,
    gender: 'female',
    age: 34,
  },
  {
    name: 'Ross Vazquez',
    email: 'rossvazquez@xinware.com',
    eyeColor: 'green',
    friends: ['Marilyn Mcintosh', 'Padilla Garrison', 'Naomi Buckner'],
    isActive: false,
    balance: 3793,
    gender: 'male',
    age: 24,
  },
  {
    name: 'Elma Head',
    email: 'elmahead@omatom.com',
    eyeColor: 'green',
    friends: ['Goldie Gentry', 'Aisha Tran'],
    isActive: true,
    balance: 2278,
    gender: 'female',
    age: 21,
  },
  {
    name: 'Carey Barr',
    email: 'careybarr@nurali.com',
    eyeColor: 'blue',
    friends: ['Jordan Sampson', 'Eddie Strong'],
    isActive: true,
    balance: 3951,
    gender: 'male',
    age: 27,
  },
  {
    name: 'Blackburn Dotson',
    email: 'blackburndotson@furnigeer.com',
    eyeColor: 'brown',
    friends: ['Jacklyn Lucas', 'Linda Chapman'],
    isActive: false,
    balance: 1498,
    gender: 'male',
    age: 38,
  },
  {
    name: 'Sheree Anthony',
    email: 'shereeanthony@kog.com',
    eyeColor: 'brown',
    friends: ['Goldie Gentry', 'Briana Decker'],
    isActive: true,
    balance: 2764,
    gender: 'female',
    age: 39,
  },
];

// const getUsersWithAge = (users, minAge, maxAge) =>
//   users.filter(user => user.age >= minAge && user.age <= maxAge);

// console.log(getUsersWithAge(users, 30, 40));

// * 24 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é getUsersWithFriend(users, friendName) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —É –∫–æ—Ç–æ—Ä—ã—Ö –µ—Å—Ç—å –¥—Ä—É–≥ —Å –∏–º–µ–Ω–µ–º –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ friendName. –ú–∞—Å—Å–∏–≤ –¥—Ä—É–∑–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Å–≤–æ–π—Å—Ç–≤–µ friends.

// const getUsersWithFriend = (users, friendName) =>
//   users.filter(user => user.friends.includes(friendName));

// console.log(getUsersWithFriend(users, 'Linda Chapman'));

// * 25 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é getFriends(users) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ –¥—Ä—É–∑–µ–π –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å–≤–æ–π—Å—Ç–≤–æ friends). –£ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –º–æ–≥—É—Ç –±—ã—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ –¥—Ä—É–∑—å—è, —Å–¥–µ–ª–∞–π —Ç–∞–∫ —á—Ç–æ–±—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã–π –º–∞—Å—Å–∏–≤ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞–ª –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π.

// const getFriends = users => {
//   const allFriendsArray = users.flatMap(user => user.friends);
//   const uniqeFriendsArray = allFriendsArray.filter(
//     (element, index, array) => array.indexOf(element) === index
//   );
//   return uniqeFriendsArray;
// };

// console.log(getFriends(users));

// * 26 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é getActiveUsers(users) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ isActive –∫–æ—Ç–æ—Ä—ã—Ö true.

// const getActiveUsers = users => users.filter(user => user.isActive);

// console.log(getActiveUsers(users));

// * 27 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é getInactiveUsers(users) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–Ω–∞—á–µ–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ isActive –∫–æ—Ç–æ—Ä—ã—Ö false.

// const getInactiveUsers = users => users.filter(user => user.isActive === false);

// console.log(getInactiveUsers(users));

// * 28 - –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ find() –¥–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã: –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π bookWithTitle –ø–æ–ª—É—á–∏–ª—Å—è –æ–±—ä–µ–∫—Ç –∫–Ω–∏–≥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π (—Å–≤–æ–π—Å—Ç–≤–æ title) —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π BOOK_TITLE. –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π bookByAuthor –ø–æ–ª—É—á–∏–ª—Å—è –æ–±—ä–µ–∫—Ç –∫–Ω–∏–≥–∏ –∞–≤—Ç–æ—Ä –∫–æ—Ç–æ—Ä—ã–π(—Å–≤–æ–π—Å—Ç–≤–æ author) —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π AUTHOR.

// const books = [
//   {
//     title: 'The Last Kingdom',
//     author: 'Bernard Cornwell',
//     rating: 8.38,
//   },
//   {
//     title: 'Beside Still Waters',
//     author: 'Robert Sheckley',
//     rating: 8.51,
//   },
//   {
//     title: 'The Dream of a Ridiculous Man',
//     author: 'Fyodor Dostoevsky',
//     rating: 7.75,
//   },
//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },
// ];
// const BOOK_TITLE = 'The Dream of a Ridiculous Man';
// const AUTHOR = 'Robert Sheckley';

// const bookWithTitle = books.find(book => book.title === BOOK_TITLE);
// const bookByAuthor = books.find(book => book.author === AUTHOR);

// console.log(bookWithTitle);
// console.log(bookByAuthor);

// * 29 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é getUserWithEmail(users, email) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –æ–±—ä–µ–∫—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–æ—á—Ç–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ (—Å–≤–æ–π—Å—Ç–≤–æ email) —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ email.

// const getUserWithEmail = (users, email) =>
//   users.find(user => user.email === email);

// * 30 - –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ every() –¥–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã:
// * –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π eachElementInFirstIsEven –±—ã–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ firstArray –Ω–∞ —á—ë—Ç–Ω–æ—Å—Ç—å.
// * –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π eachElementInFirstIsOdd –±—ã–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ firstArray –Ω–∞ –Ω–µ—á—ë—Ç–Ω–æ—Å—Ç—å.
// * –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π eachElementInSecondIsEven –±—ã–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ secondArray –Ω–∞ —á—ë—Ç–Ω–æ—Å—Ç—å.
// * –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π eachElementInSecondIsOdd –±—ã–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ secondArray –Ω–∞ –Ω–µ—á—ë—Ç–Ω–æ—Å—Ç—å.
// * –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π eachElementInThirdIsEven –±—ã–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ thirdArray –Ω–∞ —á—ë—Ç–Ω–æ—Å—Ç—å.
// * –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π eachElementInThirdIsOdd –±—ã–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ thirdArray –Ω–∞ –Ω–µ—á—ë—Ç–Ω–æ—Å—Ç—å.

// const firstArray = [26, 94, 36, 18];
// const secondArray = [17, 61, 23];
// const thirdArray = [17, 26, 94, 61, 36, 23, 18];

// const eachElementInFirstIsEven = firstArray.every(element => element % 2 === 0);
// const eachElementInFirstIsOdd = firstArray.every(element => element % 2 !== 0);
// const eachElementInSecondIsEven = secondArray.every(
//   element => element % 2 === 0
// );
// const eachElementInSecondIsOdd = secondArray.every(
//   element => element % 2 !== 0
// );
// const eachElementInThirdIsEven = thirdArray.every(element => element % 2 === 0);
// const eachElementInThirdIsOdd = thirdArray.every(element => element % 2 !== 0);

// * 31 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é isEveryUserActive(users) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –ø—Ä–æ–≤–µ—Ä—è–ª–∞ –≤—Å–µ –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å–µ–π—á–∞—Å –∞–∫—Ç–∏–≤–Ω—ã (—Å–≤–æ–π—Å—Ç–≤–æ isActive) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ true –∏–ª–∏ false

// const isEveryUserActive = users => users.every(user => user.isActive);

// console.log(isEveryUserActive(users));

// * 32 - –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ some() –¥–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã:
// * –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π anyElementInFirstIsEven –±—ã–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —á—ë—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ firstArray.
// * –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π anyElementInFirstIsOdd –±—ã–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –Ω–µ—á—ë—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ firstArray.
// * –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π anyElementInSecondIsEven –±—ã–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —á—ë—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ secondArray.
// * –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π anyElementInSecondIsOdd –±—ã–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –Ω–µ—á—ë—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ secondArray.
// * –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π anyElementInThirdIsEven –±—ã–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —á—ë—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ thirdArray.
// * –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π anyElementInThirdIsOdd –±—ã–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –Ω–µ—á—ë—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ thirdArray.

// const firstArray = [26, 94, 36, 18];
// const secondArray = [17, 61, 23];
// const thirdArray = [17, 26, 94, 61, 36, 23, 18];

// const anyElementInFirstIsEven = firstArray.some(element => element % 2 === 0);
// const anyElementInFirstIsOdd = firstArray.some(element => element % 2 !== 0);
// const anyElementInSecondIsEven = secondArray.some(element => element % 2 === 0);
// const anyElementInSecondIsOdd = secondArray.some(element => element % 2 !== 0);
// const anyElementInThirdIsEven = thirdArray.some(element => element % 2 === 0);
// const anyElementInThirdIsOdd = thirdArray.some(element => element % 2 !== 0);

// * 33 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é isAnyUserActive(users) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –ø—Ä–æ–≤–µ—Ä—è–ª–∞ –Ω–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å–≤–æ–π—Å—Ç–≤–æ isActive) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ true –∏–ª–∏ false.

// const isAnyUserActive = users => users.some(user => user.isActive);

// console.log(users);

// * 34 - –ò–≥—Ä–æ–≤–æ–º—É —Å–µ—Ä–≤–∏—Å—É –Ω–µ–æ–±—Ö–æ–¥–∏–º —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ–¥—Å—á—ë—Ç–∞ —Å—Ä–µ–¥–Ω–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –ø—Ä–æ–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –≤ –∏–≥—Ä–∞—Ö. –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π totalPlayTime –ø–æ–ª—É—á–∏–ª–æ—Å—å –æ–±—â–µ–µ –∏–≥—Ä–æ–≤–æ–µ –≤—Ä–µ–º—è –∏–∑ –º–∞—Å—Å–∏–≤–∞ playtimes.

// const players = {
//   mango: 1270,
//   poly: 468,
//   ajax: 710,
//   kiwi: 244,
// };
// const playtimes = Object.values(players);
// console.log(playtimes);

// const totalPlayTime = playtimes.reduce((total, number) => {
//   return total + number;
// }, 0);
// console.log(totalPlayTime);

// const averagePlayTime = totalPlayTime / playtimes.length;
// console.log(averagePlayTime);

// * 35 - –ù–∞—à–µ–º—É —Å–µ—Ä–≤–∏—Å—É –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å —Å—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥—ë–Ω–Ω–æ–µ –≤ –æ–¥–Ω–æ–π –∏–≥—Ä–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞, –∏ –ø–æ–ª—É—á–∏—Ç—å –æ–±—â—É—é —Å—É–º–º—É —ç—Ç–∏—Ö –≤—Ä–µ–º—ë–Ω. –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –≤—Ä–µ–º—è –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–∑ –∏–≥—Ä–æ–∫–æ–≤, –º–æ–∂–Ω–æ —Ä–∞–∑–¥–µ–ª–∏–≤ –µ–≥–æ –≤—Ä–µ–º—è (—Å–≤–æ–π—Å—Ç–≤–æ playtime) –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä (—Å–≤–æ–π—Å—Ç–≤–æ gamesPlayed).

// const players = [
//   { name: 'Mango', playtime: 1270, gamesPlayed: 4 },
//   { name: 'Poly', playtime: 469, gamesPlayed: 2 },
//   { name: 'Ajax', playtime: 690, gamesPlayed: 3 },
//   { name: 'Kiwi', playtime: 241, gamesPlayed: 1 },
// ];

// const totalAveragePlaytimePerGame = players.reduce(
//   (total, player) => total + player.playtime / player.gamesPlayed,
//   0
// );

// console.log(totalAveragePlaytimePerGame);

// * 36 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é calculateTotalBalance(users) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ —Å—á–∏—Ç–∞–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ —Å—É–º–º—É –≤—Å–µ—Ö —Å—Ä–µ–¥—Å—Ç–≤ (—Å–≤–æ–π—Å—Ç–≤–æ balance) –∫–æ—Ç–æ—Ä—ã–µ —Ö—Ä–∞–Ω—è—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–∑ –º–∞—Å—Å–∏–≤–∞ users.

// const calculateTotalBalance = users =>
//   users.reduce((total, user) => total + user.balance, 0);

// console.log(calculateTotalBalance(users));

// * 37 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é getTotalFriendCount(users) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ —Å—á–∏—Ç–∞–ª–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥—Ä—É–∑–µ–π (—Å–≤–æ–π—Å—Ç–≤–æ friends) –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –º–∞—Å—Å–∏–≤–∞ users.

// const getTotalFriendCount = users =>
//   users.reduce((total, user) => total + user.friends.length, 0);

// console.log(getTotalFriendCount(users));

// * 38 - –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ascendingReleaseDates –ø–æ–ª—É—á–∏–ª–∞—Å—å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∫–æ–ø–∏—è –º–∞—Å—Å–∏–≤–∞ releaseDates, –∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π alphabeticalAuthors –∫–æ–ø–∏—è –º–∞—Å—Å–∏–≤–∞ –∏–º—ë–Ω –∞–≤—Ç–æ—Ä–æ–≤ authors –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤ –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É.

// const releaseDates = [2016, 1967, 2008, 1984, 1973, 2012, 1997];
// const authors = [
//   'Tanith Lee',
//   'Bernard Cornwell',
//   'Robert Sheckley',
//   'Fyodor Dostoevsky',
// ];

// const ascendingReleaseDates = [...releaseDates].sort();
// console.log(ascendingReleaseDates);

// const alphabeticalAuthors = [...authors].sort();
// console.log(alphabeticalAuthors);

// * 39 - –û–Ω–ª–∞–π–Ω –±–∏–±–∏–ª–∏–æ—Ç–µ–∫–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –∫–Ω–∏–≥–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –¥–∞—Ç–µ –∏–∑–¥–∞–Ω–∏—è, –ø–æ –µ—ë –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∏–ª–∏ —É–±—ã–≤–∞–Ω–∏—é. –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ascendingReleaseDates –ø–æ–ª—É—á–∏–ª–∞—Å—å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∫–æ–ø–∏—è –º–∞—Å—Å–∏–≤–∞ releaseDates, –∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π descendingReleaseDates –∫–æ–ø–∏—è –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ —É–±—ã–≤–∞–Ω–∏—é.

// const releaseDates = [2016, 1967, 2008, 1984, 1973, 2012, 1997];

// const ascendingReleaseDates = [...releaseDates].sort((a, b) => a - b);
// console.log(ascendingReleaseDates);

// const descendingReleaseDates = [...releaseDates].sort((a, b) => b - a);
// console.log(descendingReleaseDates);

// * 40 - –û–Ω–ª–∞–π–Ω –±–∏–±–∏–ª–∏–æ—Ç–µ–∫–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –∫–Ω–∏–≥–∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –∞–≤—Ç–æ—Ä—É, –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –∏ –æ–±—Ä–∞—Ç–Ω–æ–º –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π authorsInAlphabetOrder –ø–æ–ª—É—á–∏–ª–∞—Å—å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É –∫–æ–ø–∏—è –º–∞—Å—Å–∏–≤–∞ authors, –∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π authorsInReversedOrder –∫–æ–ø–∏—è –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

// const authors = [
//   'Tanith Lee',
//   'Bernard Cornwell',
//   'Robert Sheckley',
//   'Fyodor Dostoevsky',
//   'Howard Lovecraft',
// ];

// const authorsInAlphabetOrder = [...authors].sort((a, b) => a.localeCompare(b));
// console.log(authorsInAlphabetOrder);

// const authorsInReversedOrder = [...authors].sort((a, b) => b.localeCompare(a));
// console.log(authorsInReversedOrder);

// * 41 - –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã: –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π sortedByAuthorName –ø–æ–ª—É—á–∏–ª—Å—è –º–∞—Å—Å–∏–≤ –∫–Ω–∏–≥ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –∏–º–µ–Ω–∏ –∞–≤—Ç–æ—Ä–∞ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π sortedByReversedAuthorName –ø–æ–ª—É—á–∏–ª—Å—è –º–∞—Å—Å–∏–≤ –∫–Ω–∏–≥ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –∏–º–µ–Ω–∏ –∞–≤—Ç–æ—Ä–∞ –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π sortedByAscendingRating –ø–æ–ª—É—á–∏–ª—Å—è –º–∞—Å—Å–∏–≤ –∫–Ω–∏–≥ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é —Ä–µ–π—Ç–∏–Ω–≥–∞. –í –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π sortedByDescentingRating –ø–æ–ª—É—á–∏–ª—Å—è –º–∞—Å—Å–∏–≤ –∫–Ω–∏–≥ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ —É–±—ã–≤–∞–Ω–∏—é —Ä–µ–π—Ç–∏–Ω–≥–∞.

// const books = [
//   {
//     title: 'The Last Kingdom',
//     author: 'Bernard Cornwell',
//     rating: 8.38,
//   },
//   {
//     title: 'Beside Still Waters',
//     author: 'Robert Sheckley',
//     rating: 8.51,
//   },
//   {
//     title: 'The Dream of a Ridiculous Man',
//     author: 'Fyodor Dostoevsky',
//     rating: 7.75,
//   },
//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },
//   { title: 'Enemy of God', author: 'Bernard Cornwell', rating: 8.67 },
// ];

// const sortedByAuthorName = [...books].sort((a, b) =>
//   a.author.localeCompare(b.author)
// );
// console.table(sortedByAuthorName);

// const sortedByReversedAuthorName = [...books].sort((a, b) =>
//   b.author.localeCompare(a.author)
// );
// console.table(sortedByReversedAuthorName);

// const sortedByAscendingRating = [...books].sort((a, b) => a.rating - b.rating);
// console.table(sortedByAscendingRating);

// const sortedByDescentingRating = [...books].sort((a, b) => b.rating - a.rating);
// console.table(sortedByDescentingRating);

// * 42 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é sortByAscendingBalance(users) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∏—Ö –±–∞–ª–∞–Ω—Å–∞ (—Å–≤–æ–π—Å—Ç–≤–æ balance).

// const sortByAscendingBalance = users => [
//   ...users.sort((a, b) => a.balance - b.balance),
// ];

// console.table(sortByAscendingBalance(users));

// * 43 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é sortByDescendingFriendCount(users) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ —É–±—ã–≤–∞–Ω–∏—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏—Ö –¥—Ä—É–∑–µ–π (—Å–≤–æ–π—Å—Ç–≤–æ friends).

// const sortByDescendingFriendCount = users =>
//   [...users].sort((a, b) => b.friends.length - a.friends.length);

// console.table(sortByDescendingFriendCount(users));

// * 44 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é sortByName(users) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –∏—Ö –∏–º–µ–Ω–∏ (—Å–≤–æ–π—Å—Ç–≤–æ name) –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.

// const sortByName = users =>
//   [...users].sort((a, b) => a.name.localeCompare(b.name));

// console.table(sortByName(users));

// * 45 - –î–æ–ø–æ–ª–Ω–∏ –∫–æ–¥ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π names –ø–æ–ª—É—á–∏–ª—Å—è –º–∞—Å—Å–∏–≤ –∏–º—ë–Ω –∞–≤—Ç–æ—Ä–æ–≤ –≤ –∞–ª—Ñ–∞–≤–∏—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ, —Ä–µ–π—Ç–∏–Ω–≥ –∫–Ω–∏–≥ –∫–æ—Ç–æ—Ä—ã—Ö –±–æ–ª—å—à–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π MIN_BOOK_RATING.

// const books = [
//   {
//     title: 'The Last Kingdom',
//     author: 'Bernard Cornwell',
//     rating: 8.38,
//   },
//   {
//     title: 'Beside Still Waters',
//     author: 'Robert Sheckley',
//     rating: 8.51,
//   },
//   {
//     title: 'The Dream of a Ridiculous Man',
//     author: 'Fyodor Dostoevsky',
//     rating: 7.75,
//   },
//   { title: 'Redder Than Blood', author: 'Tanith Lee', rating: 7.94 },
//   {
//     title: 'The Dreams in the Witch House',
//     author: 'Howard Lovecraft',
//     rating: 8.67,
//   },
// ];
// const MIN_BOOK_RATING = 8;

// const names = books
//   .filter(book => book.rating >= MIN_BOOK_RATING)
//   .map(book => book.author)
//   .sort((a, b) => a.localeCompare(b));

// console.table(names);

// * 46 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é getNamesSortedByFriendCount(users) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ –∏–º—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏—Ö –¥—Ä—É–∑–µ–π (—Å–≤–æ–π—Å—Ç–≤–æ friends).

// const getNamesSortedByFriendCount = users =>
//   [...users]
//     .sort((a, b) => a.friends.length - b.friends.length)
//     .map(user => user.name);

// console.table(getNamesSortedByFriendCount(users));

// * 47 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é getSortedFriends(users) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –º–∞—Å—Å–∏–≤ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏–º—ë–Ω –¥—Ä—É–∑–µ–π (—Å–≤–æ–π—Å—Ç–≤–æ friends) –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –∞–ª—Ñ–∞–≤–∏—Ç—É.

// const getSortedFriends = users =>
//   users
//     .flatMap(user => user.friends)
//     .filter((element, index, array) => array.indexOf(element) === index)
//     .sort((a, b) => a.localeCompare(b));

// console.log(getSortedFriends(users));

// * 48 - –î–æ–ø–æ–ª–Ω–∏ —Ñ—É–Ω–∫—Ü–∏—é getTotalBalanceByGender(users, gender) —Ç–∞–∫, —á—Ç–æ–±—ã –æ–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞–ª–∞ –æ–±—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (—Å–≤–æ–π—Å—Ç–≤–æ balance), –ø–æ–ª –∫–æ—Ç–æ—Ä—ã—Ö (—Å–≤–æ–π—Å—Ç–≤–æ gender) —Å–æ–≤–ø–∞–¥–∞–µ—Ç —Å–æ –∑–Ω–∞—á–µ–Ω–∏–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ gender.

// const getTotalBalanceByGender = (users, gender) => {
//   if (gender === 'male') {
//     return users
//       .filter(user => user.gender === 'male')
//       .reduce((total, user) => total + user.balance, 0);
//   }
//   if (gender === 'female') {
//     return users
//       .filter(user => user.gender === 'female')
//       .reduce((total, user) => total + user.balance, 0);
//   }
// };

// console.table(getTotalBalanceByGender(users, 'female'));
